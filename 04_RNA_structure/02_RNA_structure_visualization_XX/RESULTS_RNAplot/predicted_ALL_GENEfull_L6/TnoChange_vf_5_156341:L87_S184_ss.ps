%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.3
%%CreationDate: Mon Oct 28 18:20:13 2013
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
TCTTTGTTGAGCTCCACCCATTCGGGAGCAAACCCGTTCTTGTTAAGAATCCGATACAATGTATCCTCCGCTGGGTCTGCGTGAGGA\
) def
/coor [
[92.50000000 204.52143860]
[92.50000000 189.52143860]
[92.50000000 174.52143860]
[92.50000000 159.52143860]
[92.50000000 144.52143860]
[92.50000000 129.52143860]
[92.50000000 114.52143097]
[87.10288239 109.31363678]
[79.91149902 122.47737122]
[75.89007568 136.92825317]
[62.53423309 143.75625610]
[48.46530533 138.55381775]
[42.76492310 124.67918396]
[49.11273956 111.08855438]
[63.40998077 106.55468750]
[76.30865479 98.89804077]
[70.91154480 93.69024658]
[55.92110062 94.22563171]
[45.33656311 105.96203613]
[29.54919243 106.69307709]
[17.92535019 95.98505402]
[17.36125755 80.19083405]
[28.19158173 68.68085480]
[43.99088287 68.28377533]
[55.38571548 79.23518372]
[70.37615967 78.69979858]
[91.07182312 78.83217621]
[101.40571594 90.64427948]
[111.22863007 79.30803680]
[106.94028473 71.42816925]
[105.43788910 62.29837799]
[107.06993103 52.90505219]
[111.83593750 44.32420349]
[119.36702728 37.59845352]
[128.94955444 33.61156845]
[139.59109497 32.97557068]
[138.52101135 18.01379013]
[137.45091248 3.05200815]
[136.38082886 -11.90977383]
[123.60992432 -20.93407059]
[119.67755890 -36.06914902]
[126.44048309 -50.16868210]
[140.70544434 -56.57530594]
[155.73696899 -52.26400757]
[164.43763733 -39.27045059]
[162.69923401 -23.72979355]
[151.34260559 -12.97986126]
[152.41270447 1.98192036]
[153.48278809 16.94370270]
[154.55287170 31.90548325]
[160.78684998 18.26225853]
[164.35427856 3.69265032]
[174.97793579 -6.89686680]
[189.55894470 -10.41737652]
[203.84410095 -5.84196138]
[213.66647339 5.49474907]
[216.16091919 20.28588676]
[210.59982300 34.21693802]
[198.60533142 43.22427750]
[183.67878723 44.68096542]
[169.28724670 48.90985107]
[178.57263184 47.66875839]
[184.40631104 52.48258209]
[198.94038391 56.19217682]
[213.47444153 59.90177536]
[228.00849915 63.61137390]
[241.47080994 55.33238602]
[256.82464600 59.07876587]
[264.96084595 72.62786102]
[261.05233765 87.94122314]
[247.41798401 95.93371582]
[232.14678955 91.86352539]
[224.29890442 78.14543152]
[209.76483154 74.43583679]
[195.23077393 70.72623444]
[180.69671631 67.01663971]
[166.09877014 63.56705093]
[150.09954834 89.46950531]
[122.56487274 89.13094330]
[112.74196625 100.46718597]
[107.50000000 114.52143097]
[107.50000000 129.52143860]
[107.50000000 144.52143860]
[107.50000000 159.52143860]
[107.50000000 174.52143860]
[107.50000000 189.52143860]
[107.50000000 204.52143860]
] def
/pairs [
[1 87]
[2 86]
[3 85]
[4 84]
[5 83]
[6 82]
[7 81]
[17 26]
[18 25]
[28 80]
[29 79]
[36 50]
[37 49]
[38 48]
[39 47]
[61 77]
[63 76]
[64 75]
[65 74]
[66 73]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF

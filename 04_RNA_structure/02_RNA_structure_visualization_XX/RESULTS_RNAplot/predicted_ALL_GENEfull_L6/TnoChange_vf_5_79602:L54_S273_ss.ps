%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.3
%%CreationDate: Mon Oct 28 18:20:13 2013
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
TTGTGATGTGTATGGGAGTGACTGCAGGTGCTTATATCCTCACCTTATTCGCGG\
) def
/coor [
[107.56221771 250.29225159]
[107.56221771 235.29225159]
[107.56221771 220.29225159]
[96.88134003 209.97457886]
[96.66766357 194.76245117]
[107.56221771 183.62931824]
[94.20679474 166.90652466]
[103.16070557 146.70515442]
[99.76325989 132.09497070]
[96.36580658 117.48480225]
[87.16196442 112.41412354]
[82.40306854 103.04526520]
[83.73680878 92.62204742]
[90.70140076 84.75331116]
[88.99152374 69.85108185]
[76.89890289 60.03241348]
[75.37714386 44.89507675]
[84.81226349 33.42712402]
[83.10239410 18.52489662]
[81.39252472 3.62267065]
[72.05518341 -3.01434088]
[68.24631500 -13.57915115]
[71.08447266 -24.21193886]
[79.30792236 -31.18161583]
[79.30792236 -46.18161774]
[70.64421844 -60.10541916]
[78.60835266 -74.44085693]
[95.00749969 -74.44085693]
[102.97162628 -60.10541916]
[94.30792236 -46.18161774]
[94.30792236 -31.18161583]
[105.40757751 -15.70410919]
[96.29474640 1.91279936]
[98.00462341 16.81502533]
[99.71449280 31.71725082]
[111.50186920 40.75015259]
[113.44821167 55.83877182]
[103.89375305 68.14121246]
[105.60362244 83.04344177]
[117.59693146 96.95473480]
[110.97598267 114.08734894]
[114.37343597 128.69752502]
[117.77088928 143.30770874]
[126.52831268 146.68995667]
[132.94480896 153.40858459]
[135.85897827 162.12738037]
[134.79475403 171.16036987]
[130.03713989 178.79768372]
[122.56221771 183.62931824]
[133.45677185 194.76245117]
[133.24308777 209.97457886]
[122.56221771 220.29225159]
[122.56221771 235.29225159]
[122.56221771 250.29225159]
] def
/pairs [
[1 54]
[2 53]
[3 52]
[6 49]
[8 43]
[9 42]
[10 41]
[14 39]
[15 38]
[18 35]
[19 34]
[20 33]
[24 31]
[25 30]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF

%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.3
%%CreationDate: Mon Oct 28 18:20:13 2013
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GCGATTTTCACTAGCTGATCCTGGTTGTCATGGCCGTAGAAGAAAGGTTCCTTACGGAATATC\
) def
/coor [
[46.26741791 164.33918762]
[35.66081619 174.94578552]
[40.27510452 189.53916931]
[37.56755447 204.60330200]
[28.16034317 216.67652893]
[14.21517563 222.98452759]
[-1.06344914 222.07777405]
[-14.16461563 214.16461182]
[-22.07777023 201.06344604]
[-22.98453140 185.78482056]
[-16.67652702 171.83966064]
[-4.60329533 162.43244934]
[10.46082687 159.72489929]
[25.05421257 164.33918762]
[35.66081619 153.73258972]
[39.18925858 139.26194763]
[54.41854858 134.97485352]
[65.02515411 124.36824799]
[75.63175201 113.76164246]
[72.07270050 101.80557251]
[74.06257629 89.49075317]
[81.20601654 79.26403046]
[92.08367157 73.15738678]
[104.53423309 72.38415527]
[116.08388519 77.09796906]
[127.67903900 67.58206940]
[139.27420044 58.06617355]
[150.86935425 48.55027390]
[149.58183289 31.86633110]
[158.28890991 17.76869965]
[173.48019409 11.57362080]
[189.24479675 15.48310947]
[200.35905457 5.40972519]
[211.47332764 -4.66365910]
[222.58760071 -14.73704338]
[219.26676941 -29.73263168]
[223.90394592 -44.37476730]
[235.25175476 -54.72479248]
[250.25767517 -57.99859619]
[264.88519287 -53.31554413]
[275.19961548 -41.93535614]
[278.42636108 -26.91924286]
[273.69747925 -12.30646515]
[262.28500366 -2.02778578]
[247.25886536 1.15188217]
[232.66098022 -3.62277651]
[221.54670715 6.45060778]
[210.43244934 16.52399254]
[199.31817627 26.59737587]
[201.98077393 39.88895416]
[197.60221863 52.83360291]
[187.25323486 61.92416382]
[173.63735962 64.64006042]
[160.38525391 60.14542770]
[148.79010010 69.66133118]
[137.19494629 79.17723083]
[125.59978485 88.69313049]
[127.37494659 105.81435394]
[118.79398346 120.73596954]
[103.10314178 127.81303406]
[86.23835754 124.36824799]
[75.63175201 134.97485352]
[65.02515411 145.58145142]
] def
/pairs [
[1 15]
[2 14]
[17 63]
[18 62]
[19 61]
[25 57]
[26 56]
[27 55]
[28 54]
[32 49]
[33 48]
[34 47]
[35 46]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF

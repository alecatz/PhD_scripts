%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.3
%%CreationDate: Mon Oct 28 18:20:13 2013
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
ACCTCTATCAAAGGTATTGGTAGGCGATTGGCTAACATTGTCTGCAAGAAGGCTGATGTCGACATGAACAAAAGGT\
) def
/coor [
[92.50000000 171.91413879]
[92.50000000 156.91413879]
[92.50000000 141.91413879]
[92.50000000 126.91413116]
[78.09884644 117.34819794]
[72.08366394 101.13961792]
[76.75767517 84.49467468]
[90.33120728 73.78674316]
[89.10856628 58.83665085]
[87.88592529 43.88656235]
[73.05219269 32.47168732]
[71.01291656 14.17924023]
[82.57073212 0.25742695]
[80.13359070 -14.54326057]
[77.69644928 -29.34394646]
[75.25930786 -44.14463425]
[72.82216644 -58.94532013]
[70.38502502 -73.74600983]
[67.94788361 -88.54669189]
[65.51073456 -103.34738159]
[50.47040939 -103.66848755]
[35.74522018 -106.74800873]
[21.83670616 -112.48106384]
[9.21858883 -120.67238617]
[-1.67936599 -131.04298401]
[-10.48597717 -143.23962402]
[-16.90129471 -156.84692383]
[-20.70681572 -171.40139771]
[-21.77292442 -186.40733337]
[-20.06331062 -201.35362244]
[-15.63620472 -215.73123169]
[-8.64238930 -229.05043030]
[0.67992789 -240.85758972]
[12.01323128 -250.75056458]
[24.97151375 -258.39239502]
[39.11342239 -263.52279663]
[53.95728302 -265.96704102]
[68.99752808 -265.64190674]
[83.72188568 -262.55841064]
[97.62885284 -256.82159424]
[110.24475861 -248.62687683]
[121.13992310 -238.25334167]
[129.94323730 -226.05432129]
[136.35488892 -212.44529724]
[140.15649414 -197.88980103]
[141.21855164 -182.88359070]
[139.50491333 -167.93774414]
[135.07392883 -153.56134033]
[128.07652283 -140.24401855]
[118.75102997 -128.43937683]
[107.41505432 -118.54946136]
[94.45471191 -110.91112518]
[80.31142426 -105.78452301]
[82.74856567 -90.98384094]
[85.18570709 -76.18315125]
[87.62284851 -61.38246536]
[90.05998993 -46.58177567]
[92.49713898 -31.78108978]
[94.93428040 -16.98040199]
[97.37142181 -2.17971516]
[108.14694214 2.47412205]
[115.30627441 11.92851543]
[116.89681244 23.80340385]
[112.38721466 35.03448105]
[102.83601379 42.66392517]
[104.05865479 57.61401367]
[105.28129578 72.56410217]
[116.61311340 77.53614044]
[124.68600464 86.91482544]
[127.91633606 98.86038208]
[125.67042542 111.02949524]
[118.38884735 121.03498840]
[107.50000000 126.91413116]
[107.50000000 141.91413879]
[107.50000000 156.91413879]
[107.50000000 171.91413879]
] def
/pairs [
[1 76]
[2 75]
[3 74]
[4 73]
[8 67]
[9 66]
[10 65]
[13 60]
[14 59]
[15 58]
[16 57]
[17 56]
[18 55]
[19 54]
[20 53]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF

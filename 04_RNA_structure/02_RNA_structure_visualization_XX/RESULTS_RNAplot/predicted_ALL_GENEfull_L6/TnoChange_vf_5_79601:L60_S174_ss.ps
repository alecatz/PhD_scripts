%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.3
%%CreationDate: Mon Oct 28 18:20:13 2013
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
TCAGTCCCTTCTGCTGAAAACTTGGCAGATCAGATCCTTGAAGTTCTCAACTTTTTCGGG\
) def
/coor [
[84.49842834 235.45431519]
[84.49842834 220.45431519]
[84.49842834 205.45431519]
[84.49842834 190.45431519]
[72.39319611 186.09202576]
[62.29068375 178.08244324]
[55.25520325 167.24893188]
[52.03446198 154.71336365]
[52.98011780 141.78004456]
[58.00946808 129.79989624]
[66.61241150 120.02946472]
[77.90314484 113.49900055]
[90.71133423 110.90395355]
[85.84667969 97.79567719]
[94.46734619 86.78768921]
[96.77570343 71.96636963]
[99.08406067 57.14505386]
[93.56264496 42.31857300]
[103.16638184 30.93360710]
[105.47474670 16.11228943]
[107.78310394 1.29097033]
[110.09146118 -13.53034782]
[102.89431000 -22.34427071]
[101.99059296 -33.46210098]
[107.44583893 -42.93325424]
[117.11077881 -47.53672409]
[120.93084717 -62.04214096]
[124.75090790 -76.54755402]
[114.24907684 -87.84866333]
[111.54671478 -103.03749847]
[117.50612640 -117.26736450]
[130.22569275 -125.99755096]
[145.64663696 -126.44229889]
[158.84820557 -118.45967865]
[165.61782837 -104.59693146]
[163.79531860 -89.27759552]
[153.96224976 -77.39002228]
[139.25633240 -72.72748566]
[135.43626404 -58.22207260]
[131.61619568 -43.71665573]
[138.36309814 -25.86131859]
[124.91278076 -11.22198963]
[122.60442352 3.59932899]
[120.29605865 18.42064667]
[117.98770142 33.24196625]
[123.67423248 47.00832748]
[113.90538025 59.45341110]
[111.59702301 74.27473450]
[109.28866577 89.09604645]
[114.15332031 102.20432281]
[105.53265381 113.21231079]
[120.27858734 122.55884552]
[129.68211365 137.20861816]
[132.02580261 154.40736389]
[126.91482544 170.94276428]
[115.34267426 183.74450684]
[99.49842834 190.45431519]
[99.49842834 205.45431519]
[99.49842834 220.45431519]
[99.49842834 235.45431519]
] def
/pairs [
[1 60]
[2 59]
[3 58]
[4 57]
[13 51]
[15 49]
[16 48]
[17 47]
[19 45]
[20 44]
[21 43]
[22 42]
[26 40]
[27 39]
[28 38]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF

%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.3
%%CreationDate: Mon Oct 28 18:20:13 2013
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GCAGCTCTGCAAGATTGATTCTGAGGGTAATGCCAGGAAGGTTGTTGGATGC\
) def
/coor [
[90.19276428 236.60408020]
[90.19276428 221.60408020]
[90.19276428 206.60408020]
[90.19276428 191.60408020]
[90.19276428 176.60408020]
[90.19276428 161.60408020]
[90.19276428 146.60408020]
[86.88134766 139.58314514]
[90.66361237 130.72206116]
[91.55221558 115.74839783]
[84.14793396 108.25161743]
[82.25431061 97.88632202]
[86.52962494 88.25580597]
[95.48764038 82.70793152]
[98.14099884 67.94447327]
[100.79434967 53.18101120]
[93.74768066 44.11157608]
[93.15702057 32.86753464]
[98.97687531 23.49333763]
[108.90180969 19.21398926]
[113.28266144 4.86797523]
[117.66351318 -9.47803974]
[109.89379883 -20.83078575]
[110.23650360 -34.38581848]
[118.33070374 -45.01697922]
[130.92784119 -48.83919525]
[124.11611938 -63.10019302]
[129.46226501 -77.97280121]
[143.79447937 -84.63335419]
[158.60972595 -79.13027954]
[165.11839294 -64.72843933]
[159.45898438 -49.97219849]
[144.98913574 -43.61617279]
[152.66755676 -28.90524673]
[147.44961548 -12.80416107]
[132.00952148 -5.09718800]
[127.62867737 9.24882698]
[123.24782562 23.59484100]
[129.36126709 41.61616898]
[115.55780792 55.83436584]
[112.90445709 70.59782410]
[110.25109863 85.36128235]
[117.74568939 102.11367798]
[106.52587128 116.63700867]
[105.63726807 131.61067200]
[105.19276428 146.60408020]
[105.19276428 161.60408020]
[105.19276428 176.60408020]
[105.19276428 191.60408020]
[105.19276428 206.60408020]
[105.19276428 221.60408020]
[105.19276428 236.60408020]
] def
/pairs [
[1 52]
[2 51]
[3 50]
[4 49]
[5 48]
[6 47]
[7 46]
[9 45]
[10 44]
[14 42]
[15 41]
[16 40]
[20 38]
[21 37]
[22 36]
[26 33]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF

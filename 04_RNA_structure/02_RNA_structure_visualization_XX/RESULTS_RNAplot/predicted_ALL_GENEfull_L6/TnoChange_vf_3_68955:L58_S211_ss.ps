%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.3
%%CreationDate: Mon Oct 28 18:20:13 2013
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GATGCGCTCGGGCGATCAGCTTTAAGTTGTTAGTGTGATTGAATTGTTCCGAAATATC\
) def
/coor [
[92.50000000 156.87190247]
[92.50000000 141.87190247]
[92.50000000 126.87189484]
[92.50000000 111.87189484]
[79.37796783 104.60331726]
[66.25711060 97.33537292]
[53.54109192 105.29168701]
[46.33281326 120.02168274]
[29.95583153 120.87402344]
[21.25737953 106.97190857]
[29.18568039 92.61662292]
[45.58477783 92.57566833]
[58.30079269 84.61935425]
[47.96962357 73.74429321]
[41.79208755 60.07542419]
[40.45616531 45.13503265]
[44.11064148 30.58701324]
[52.34851837 18.05156898]
[64.25235748 8.92475796]
[78.49642944 4.22302246]
[93.49440002 4.46999168]
[107.57594299 9.63815975]
[119.17282867 19.15195465]
[126.99351501 31.95183182]
[130.16702271 46.61228561]
[128.33992004 61.50059128]
[121.71568298 74.95865631]
[111.03322601 85.48684692]
[125.14373016 80.39826965]
[139.25424194 75.30968475]
[153.36474609 70.22109985]
[167.47525024 65.13251495]
[181.58575439 60.04393387]
[188.36282349 46.01863861]
[202.74537659 41.05910110]
[216.07458496 47.60644150]
[230.18508911 42.51786041]
[244.29559326 37.42927551]
[258.40609741 32.34069443]
[271.25482178 21.27964973]
[285.44046021 30.56423759]
[280.44570923 46.76573944]
[263.49468994 46.45119858]
[249.38417053 51.53977966]
[235.27366638 56.62836456]
[221.16316223 61.71694565]
[215.08068848 75.26460266]
[200.84312439 80.62615967]
[186.67433167 74.15444183]
[172.56382751 79.24301910]
[158.45332336 84.33160400]
[144.34281921 89.42018890]
[130.23231506 94.50877380]
[116.12181091 99.59735107]
[107.50000000 111.87189484]
[107.50000000 126.87189484]
[107.50000000 141.87190247]
[107.50000000 156.87190247]
] def
/pairs [
[1 58]
[2 57]
[3 56]
[4 55]
[6 13]
[7 12]
[28 54]
[29 53]
[30 52]
[31 51]
[32 50]
[33 49]
[36 46]
[37 45]
[38 44]
[39 43]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF

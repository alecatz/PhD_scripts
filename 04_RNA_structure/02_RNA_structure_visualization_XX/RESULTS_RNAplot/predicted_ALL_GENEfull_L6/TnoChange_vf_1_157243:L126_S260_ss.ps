%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.3
%%CreationDate: Mon Oct 28 18:20:13 2013
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GCAGTCCAGCTTTGCTCAACAACATCACGCACTCTCCTGTTGTACTCGCGCTTGCTTTCGCTGTACATCCGAGCAGCTTCCGAGTTTGCAGGAGAATTCGGATTAGGGTCACAGAGCAAGGACTGC\
) def
/coor [
[81.85116577 303.04577637]
[81.85116577 288.04577637]
[74.11386108 275.31848145]
[81.85116577 261.51831055]
[81.85116577 246.51832581]
[81.85116577 231.51832581]
[73.31334686 227.14253235]
[66.96298981 219.87351990]
[63.73456955 210.71527100]
[64.12736511 200.95417786]
[68.12876892 191.97830200]
[75.20992279 185.08006287]
[84.39528656 181.27014160]
[85.87708282 166.34350586]
[87.35887909 151.41688538]
[88.84067535 136.49024963]
[77.11591339 130.53501892]
[68.10905457 120.95318604]
[62.88982773 108.88278961]
[47.90015411 109.43923950]
[32.91047668 109.99569702]
[17.92080307 110.55214691]
[2.93112731 111.10860443]
[-12.05854797 111.66505432]
[-17.69315529 125.81324005]
[-28.59974289 136.44180298]
[-42.88867569 141.70927429]
[-58.08431244 140.70303345]
[-71.55391693 133.59742737]
[-80.96379852 121.62353516]
[-84.68363190 106.85591125]
[-82.06894684 91.85313416]
[-73.57274628 79.21453094]
[-60.66704178 71.12980652]
[-45.58783340 68.99968719]
[-30.94768333 73.19324493]
[-19.28308487 82.98390198]
[-12.61500168 96.67537689]
[2.37467360 96.11892700]
[17.36434937 95.56246948]
[32.35402298 95.00601959]
[47.34370041 94.44956207]
[62.33337402 93.89311218]
[76.73940277 69.75080872]
[103.77177429 62.02839661]
[108.15931702 47.68442917]
[112.54686737 33.34046173]
[105.38526154 19.50755692]
[110.03919983 5.02323627]
[123.27088928 -1.71900856]
[127.65843964 -16.06297684]
[120.49683380 -29.89587975]
[125.15076447 -44.38020325]
[138.38246155 -51.12244797]
[142.77000427 -65.46641541]
[147.15756226 -79.81038666]
[151.54510498 -94.15435028]
[138.59901428 -101.87849426]
[127.87812805 -112.47689056]
[120.00572968 -125.33335114]
[115.43950653 -139.70043945]
[114.44494629 -154.74285889]
[117.07986450 -169.58605957]
[123.19106293 -183.36708069]
[132.42326355 -195.28471375]
[144.23970032 -204.64608765]
[157.95338440 -210.90693665]
[172.76702881 -213.70326233]
[187.81936646 -212.87249756]
[202.23530579 -208.46293640]
[215.17671204 -200.73095703]
[225.89117432 -190.12606812]
[233.75576782 -177.26481628]
[238.31327820 -162.89497375]
[239.29872131 -147.85195923]
[236.65481567 -133.01036072]
[230.53524780 -119.23303986]
[221.29583740 -107.32099915]
[209.47372437 -97.96679688]
[195.75625610 -91.71426392]
[180.94091797 -88.92691803]
[165.88906860 -89.76680756]
[161.50152588 -75.42283630]
[157.11398315 -61.07886887]
[152.72642517 -46.73490143]
[159.92221069 -33.74427795]
[155.67695618 -19.13495255]
[142.00241089 -11.67543030]
[137.61485291 2.66853833]
[144.81063843 15.65916061]
[140.56538391 30.26848602]
[126.89083099 37.72800827]
[122.50328827 52.07197571]
[118.11573792 66.41594696]
[124.36550140 70.63350677]
[129.66398621 75.99757385]
[133.80435181 82.29874420]
[136.62493896 89.29100037]
[138.01562500 96.70134735]
[137.92211914 104.24048615]
[136.34806824 111.61406708]
[149.46035767 118.89882660]
[162.57266235 126.18358612]
[178.95172119 125.37229156]
[187.61529541 139.29617310]
[179.65104675 153.63153076]
[163.25189209 153.63139343]
[155.28790283 139.29588318]
[142.17559814 132.01112366]
[129.06330872 124.72635651]
[124.94407654 128.87666321]
[120.23907471 132.34886169]
[115.05879211 135.06140137]
[109.52488708 136.95057678]
[103.76730347 137.97204590]
[102.28550720 152.89868164]
[100.80371094 167.82530212]
[99.32191467 182.75193787]
[113.72695923 197.92448425]
[112.50559998 218.52212524]
[96.85116577 231.51832581]
[96.85116577 246.51832581]
[96.85116577 261.51831055]
[104.58846283 275.31848145]
[96.85116577 288.04577637]
[96.85116577 303.04577637]
] def
/pairs [
[1 126]
[2 125]
[4 123]
[5 122]
[6 121]
[13 118]
[14 117]
[15 116]
[16 115]
[19 43]
[20 42]
[21 41]
[22 40]
[23 39]
[24 38]
[45 94]
[46 93]
[47 92]
[50 89]
[51 88]
[54 85]
[55 84]
[56 83]
[57 82]
[101 110]
[102 109]
[103 108]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF

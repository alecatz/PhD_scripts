%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.3
%%CreationDate: Mon Oct 28 18:20:13 2013
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GCTCCCGAGATGTCTCTGGTGTTCCCATTATTAGATGCCTCAGGCAATGATTCTATCAAACC\
) def
/coor [
[94.87290955 227.40142822]
[94.87290955 212.40142822]
[94.87290955 197.40142822]
[94.87290955 182.40142822]
[94.87290955 167.40142822]
[82.53700256 156.23008728]
[81.90119171 139.26686096]
[93.82425690 126.72100830]
[93.07656860 111.73965454]
[90.84093475 96.90719604]
[87.13957214 82.37103271]
[65.47674561 73.79037476]
[55.64002609 52.91092682]
[62.68143082 31.16158485]
[53.62436676 19.20459557]
[44.56729889 7.24760866]
[35.51023483 -4.70937872]
[26.45316696 -16.66636658]
[17.39610100 -28.62335396]
[8.33903503 -40.58034134]
[-7.03427935 -39.29008865]
[-20.65398026 -46.53628159]
[-28.17406845 -60.00668716]
[-27.19491386 -75.40294647]
[-18.02895927 -87.81217194]
[-3.60102940 -93.27462006]
[11.48497772 -90.04724884]
[22.41517258 -79.15989685]
[25.70176697 -64.08667755]
[20.29602242 -49.63740921]
[29.35308838 -37.68041992]
[38.41015625 -25.72343254]
[47.46722031 -13.76644516]
[56.52428818 -1.80945730]
[65.58135223 10.14753056]
[74.63842010 22.10451698]
[82.89965057 19.78489304]
[91.50286102 19.82152367]
[99.78740692 22.22398758]
[107.11372375 26.81971741]
[112.91268158 33.26633072]
[116.72978973 41.07711411]
[118.26084137 49.65777588]
[117.37606049 58.35162735]
[114.13107300 66.48987579]
[108.76351929 73.44304657]
[101.67572784 78.66967773]
[105.37709045 93.20583344]
[108.31585693 95.08953857]
[110.50484467 98.24544525]
[111.40559387 102.34063721]
[110.63631439 106.82222748]
[108.05792236 110.99196625]
[108.80561066 125.97332001]
[119.92503357 133.97006226]
[124.22700500 146.76564026]
[120.31289673 159.47921753]
[109.87290955 167.40142822]
[109.87290955 182.40142822]
[109.87290955 197.40142822]
[109.87290955 212.40142822]
[109.87290955 227.40142822]
] def
/pairs [
[1 62]
[2 61]
[3 60]
[4 59]
[5 58]
[8 54]
[9 53]
[10 48]
[11 47]
[14 36]
[15 35]
[16 34]
[17 33]
[18 32]
[19 31]
[20 30]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF

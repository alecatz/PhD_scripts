%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.3
%%CreationDate: Mon Oct 28 18:20:13 2013
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GCAGAGATAATCTTGAGATATACACAAGTGATTACACAGTTCAAGTTCTTGTTGGATATTGTCTGGTGTACGTTTTTATGCAGACGTTCATGATTCCTGGAACTGTGTTCATGTCTTTGCTTGCTGGTGCTCTCTTTGGAGTTGTCAAAGGAATGGC\
) def
/coor [
[-95.39908600 161.21847534]
[-109.64638519 165.91043091]
[-123.89368439 170.60237122]
[-138.14099121 175.29432678]
[-139.70573425 186.74418640]
[-145.42758179 196.72517395]
[-154.43653870 203.79739380]
[-165.39167786 206.95733643]
[-176.68074036 205.78019714]
[-186.65734863 200.47648621]
[-193.88113403 191.85571289]
[-208.38281250 195.68997192]
[-222.88449097 199.52421570]
[-231.37689209 214.78807068]
[-247.94810486 219.12858582]
[-262.25820923 210.34042358]
[-276.68078613 214.46223450]
[-284.39166260 227.99665833]
[-299.07690430 231.97129822]
[-311.93240356 224.53677368]
[-326.35494995 228.65858459]
[-328.15173340 243.72666931]
[-335.56057739 256.92333984]
[-347.42541504 266.25283813]
[-361.91891479 270.31802368]
[-376.82412720 268.52935791]
[-389.87344360 261.19036865]
[-399.09359741 249.44650269]
[-413.51617432 253.56832886]
[-427.93875122 257.69012451]
[-438.94586182 269.84643555]
[-454.91790771 266.12808228]
[-459.42419434 250.36021423]
[-447.82904053 238.76345825]
[-432.06057739 243.26756287]
[-417.63800049 239.14575195]
[-403.21542358 235.02392578]
[-401.59335327 220.18148804]
[-394.39276123 207.05528259]
[-382.68365479 197.66053772]
[-368.23077393 193.45314026]
[-353.22784424 195.10414124]
[-339.96447754 202.39289856]
[-330.47677612 214.23600769]
[-316.05419922 210.11419678]
[-309.06866455 197.00930786]
[-294.50085449 192.62374878]
[-280.80261230 200.03967285]
[-266.38003540 195.91784668]
[-261.74234009 183.86222839]
[-250.83572388 176.58451843]
[-237.53372192 176.93977356]
[-226.71873474 185.02253723]
[-212.21705627 181.18829346]
[-197.71539307 177.35404968]
[-192.03828430 159.60546875]
[-176.72662354 148.72557068]
[-157.80030823 149.21124268]
[-142.83293152 161.04702759]
[-128.58563232 156.35507202]
[-114.33833313 151.66313171]
[-100.09103394 146.97117615]
[-96.29434204 137.41271973]
[-87.66574097 131.42062378]
[-76.94276428 131.19210815]
[-67.69432831 137.04653931]
[-53.27175903 132.92471313]
[-47.67400742 128.03620911]
[-38.52135086 128.86738586]
[-24.01967812 125.03313446]
[-9.51800537 121.19889069]
[0.80866122 110.46533203]
[16.12815094 114.41802979]
[30.62982368 110.58378601]
[45.13149643 106.74953461]
[59.63317108 102.91528320]
[64.49818420 80.56804657]
[80.70023346 64.42614746]
[103.06541443 59.64429474]
[124.45169830 67.74950409]
[135.57221985 57.68302917]
[146.69274902 47.61655045]
[157.81326294 37.55007553]
[154.83851624 25.34438133]
[157.34266663 13.10739613]
[164.78623962 3.16733861]
[175.69602966 -2.61155319]
[187.95634460 -3.17851496]
[199.21925354 1.51319075]
[210.73120117 -8.10321426]
[222.24313354 -17.71961784]
[233.75508118 -27.33602333]
[245.26701355 -36.95242691]
[240.37380981 -51.31978607]
[241.00503540 -66.48442078]
[247.07531738 -80.39542389]
[257.76370239 -91.17146301]
[271.62466431 -97.35515594]
[286.78363037 -98.11021423]
[301.19049072 -93.33451843]
[312.89678955 -83.67395020]
[320.31939697 -70.43501282]
[322.45443726 -55.40816879]
[319.01318359 -40.62567520]
[310.46099854 -28.08674049]
[297.95455933 -19.48715401]
[283.18518066 -15.98994064]
[268.15036011 -18.06806946]
[254.88342285 -25.44048691]
[243.37147522 -15.82408333]
[231.85954285 -6.20767832]
[220.34759521 3.40872622]
[208.83566284 13.02513123]
[210.86799622 30.52426910]
[201.94647217 45.89621735]
[185.45614624 52.93528748]
[167.87974548 48.67060089]
[156.75921631 58.73707581]
[145.63870239 68.80355072]
[134.51817322 78.87002563]
[138.29698181 86.91104126]
[140.23019409 95.58283234]
[140.22463989 104.46749878]
[138.28057861 113.13686371]
[151.32038879 120.55060577]
[164.36018372 127.96434021]
[177.39999390 135.37808228]
[191.47727966 128.85047913]
[206.69633484 131.87699890]
[217.20513916 143.29386902]
[218.96281433 158.71107483]
[211.29350281 172.20039368]
[197.14622498 178.57489014]
[181.96089172 175.38345337]
[171.57656860 163.85325623]
[169.98625183 148.41787720]
[156.94644165 141.00415039]
[143.90664673 133.59040833]
[130.86683655 126.17667389]
[124.36241913 132.31799316]
[116.66777039 136.88041687]
[108.15882111 139.64105225]
[99.25128174 140.46504211]
[90.38031006 139.31210327]
[81.97930908 136.23858643]
[74.45870972 131.39462280]
[68.18592834 125.01689148]
[63.46741867 117.41695404]
[48.96574783 121.25120544]
[34.46407318 125.08545685]
[19.96239853 128.91970825]
[8.59847641 139.92750549]
[-5.68375587 135.70056152]
[-20.18542862 139.53480530]
[-34.68710327 143.36906433]
[-49.14994049 147.34729004]
[-63.57251358 151.46910095]
] def
/pairs [
[1 62]
[2 61]
[3 60]
[4 59]
[11 55]
[12 54]
[13 53]
[16 49]
[17 48]
[20 45]
[21 44]
[28 37]
[29 36]
[30 35]
[66 157]
[67 156]
[69 155]
[70 154]
[71 153]
[73 151]
[74 150]
[75 149]
[76 148]
[80 120]
[81 119]
[82 118]
[83 117]
[89 113]
[90 112]
[91 111]
[92 110]
[93 109]
[124 139]
[125 138]
[126 137]
[127 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF

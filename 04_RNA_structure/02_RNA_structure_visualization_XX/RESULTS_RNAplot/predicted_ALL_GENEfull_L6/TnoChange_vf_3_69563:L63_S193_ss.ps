%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.3
%%CreationDate: Mon Oct 28 18:20:13 2013
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GCTTGCTTAGCACTGTCATGCCTGGATGATTATGAAGTGGTATGATAGACCCAGGTGGCATGC\
) def
/coor [
[92.50000000 218.55030823]
[81.81912994 208.23263550]
[81.60544586 193.02050781]
[92.50000000 181.88737488]
[92.50000000 166.88737488]
[92.50000000 151.88737488]
[92.50000000 136.88737488]
[83.26162720 134.25469971]
[74.87857056 129.31838989]
[67.92227936 122.34364319]
[62.88453293 113.73652649]
[60.14295578 104.02059174]
[59.93331909 93.80512238]
[62.33055115 83.74693298]
[67.24002075 74.50814819]
[74.39978790 66.71263885]
[62.35167694 57.77714539]
[50.30356216 48.84165573]
[38.25545120 39.90616608]
[22.66096115 42.47276688]
[9.86800957 33.19289780]
[7.46642780 17.57214355]
[16.88103104 4.87802076]
[32.52630234 2.64172530]
[45.12018204 12.19001293]
[47.19094086 27.85805321]
[59.23905182 36.79354477]
[71.28716278 45.72903442]
[83.33528137 54.66452408]
[98.04705811 51.73816681]
[105.75859833 38.87223816]
[113.47013855 26.00630951]
[121.18167877 13.14037991]
[114.97942352 -1.08324981]
[118.35500336 -16.22871399]
[130.01043701 -26.47227287]
[145.46397400 -27.87506866]
[158.77340698 -19.89769745]
[164.82099915 -5.60762215]
[161.28132629 9.50033283]
[149.51545715 19.61684990]
[134.04760742 20.85192108]
[126.33606720 33.71784973]
[118.62452698 46.58377838]
[110.91298676 59.44970703]
[119.44786835 63.19131470]
[126.87620544 68.68369293]
[132.84965515 75.62487030]
[137.09809875 83.64618683]
[139.44168091 92.33181763]
[139.79827881 101.24024200]
[138.18583679 109.92672729]
[134.71972656 117.96550751]
[129.60522461 124.97062683]
[123.12575531 130.61448669]
[115.62729645 134.64309692]
[107.50000000 136.88737488]
[107.50000000 151.88737488]
[107.50000000 166.88737488]
[107.50000000 181.88737488]
[118.39455414 193.02050781]
[118.18087006 208.23263550]
[107.50000000 218.55030823]
] def
/pairs [
[1 63]
[4 60]
[5 59]
[6 58]
[7 57]
[16 29]
[17 28]
[18 27]
[19 26]
[30 45]
[31 44]
[32 43]
[33 42]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF

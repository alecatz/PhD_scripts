%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.3
%%CreationDate: Mon Oct 28 18:20:13 2013
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
CCAAGCTGAGTCCTCTCAAAAGGCTGCTGAATCACGTGCCCAAGATGTCACAAAAGAGCTTGAAAACACCACAAGTATGCACTTGATAATCACTTCTTGAGTTGATGCCTGGTGG\
) def
/coor [
[92.50000000 149.52638245]
[92.50000000 134.52638245]
[92.50000000 119.52639008]
[86.12651825 115.57306671]
[72.90583038 122.65921783]
[73.37955475 107.66642761]
[67.00607300 103.71311188]
[53.56798935 110.37778473]
[55.19615173 127.71335602]
[50.13632202 144.33755493]
[39.17013931 157.77270508]
[23.95744514 166.02693176]
[6.78509521 167.88934326]
[-9.77679825 163.10769653]
[-23.25953293 152.42213440]
[-36.11239243 160.15544128]
[-41.36397552 175.31462097]
[-56.53760147 180.52427673]
[-69.99336243 171.78802490]
[-71.40914917 155.80757141]
[-59.69889450 144.84173584]
[-43.84569931 147.30258179]
[-30.99284172 139.56927490]
[-33.94264984 127.12052917]
[-33.22613907 114.32904816]
[-28.89231300 102.25359344]
[-21.29001045 91.89658356]
[-11.03983974 84.12088776]
[1.01646471 79.57796478]
[13.88516808 78.65323639]
[26.50243950 81.43347931]
[37.82229614 87.69873047]
[46.90331268 96.93970490]
[60.34140015 90.27502441]
[70.57736206 80.18723297]
[82.35872650 75.59957123]
[93.30786133 76.17418671]
[101.51722717 80.67357635]
[105.85270691 87.25568390]
[106.10832214 93.85837555]
[118.52365875 85.44056702]
[130.93899536 77.02275848]
[143.35432434 68.60495758]
[155.76965332 60.18714905]
[154.76841736 44.92462158]
[161.49668884 31.30010986]
[174.05770874 22.92830658]
[189.02252197 21.97424698]
[202.36573792 28.59421921]
[214.78108215 20.17641449]
[227.19641113 11.75860786]
[239.61175537 3.34080219]
[235.07167053 -13.15231514]
[236.36883545 -30.18528748]
[243.33435059 -45.75632858]
[255.13410950 -58.04101562]
[270.36862183 -65.60607147]
[287.23907471 -67.57656097]
[303.75964355 -63.73705673]
[317.99124146 -54.55506134]
[329.68243408 -63.95271301]
[341.37365723 -73.35036469]
[340.11145020 -79.56061554]
[340.54635620 -85.85002136]
[342.62954712 -91.76557922]
[346.19409180 -96.88585663]
[350.96820068 -100.85105133]
[356.59597778 -103.38822174]
[362.66381836 -104.33004761]
[368.73074341 -103.62575531]
[374.36065674 -101.34355164]
[379.15347290 -97.66445160]
[392.59155273 -104.32912445]
[406.02963257 -110.99379730]
[419.46771240 -117.65847778]
[432.90579224 -124.32315063]
[441.53036499 -138.27122498]
[457.91165161 -137.50578308]
[465.19796753 -122.81424713]
[455.89379883 -109.31000519]
[439.57046509 -110.88507080]
[426.13238525 -104.22039032]
[412.69430542 -97.55571747]
[399.25622559 -90.89104462]
[385.81814575 -84.22636414]
[375.78070068 -62.03226852]
[350.77130127 -61.65916061]
[339.08010864 -52.26150894]
[327.38888550 -42.86386108]
[332.42590332 -30.80642319]
[334.12561035 -17.83642387]
[332.36181641 -4.86122942]
[327.25103760 7.20954132]
[319.14453125 17.52778053]
[308.60443115 25.36647987]
[296.36453247 30.17095375]
[283.27944946 31.59808922]
[270.26473999 29.54083443]
[258.23294067 24.13619423]
[248.02955627 15.75613689]
[235.61421204 24.17394257]
[223.19888306 32.59174728]
[210.78355408 41.00955582]
[211.99452209 55.85540009]
[205.56916809 69.40423584]
[193.14263916 77.97441101]
[177.99540710 79.18185425]
[164.18746948 72.60248566]
[151.77212524 81.02028656]
[139.35679626 89.43809509]
[126.94145966 97.85590363]
[114.52612305 106.27370453]
[107.50000000 119.52639008]
[107.50000000 134.52638245]
[107.50000000 149.52638245]
] def
/pairs [
[1 115]
[2 114]
[3 113]
[7 34]
[8 33]
[15 23]
[16 22]
[40 112]
[41 111]
[42 110]
[43 109]
[44 108]
[49 103]
[50 102]
[51 101]
[52 100]
[60 89]
[61 88]
[62 87]
[72 85]
[73 84]
[74 83]
[75 82]
[76 81]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF

%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.3
%%CreationDate: Mon Oct 28 18:20:13 2013
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
CCCTAAGATCTACAGGATGAAGCTTTGGGGTAGAAATGAAGTATGCGCCAAGTCCAAGTTCTGG\
) def
/coor [
[65.11315155 111.79111481]
[50.22251892 113.59916687]
[35.33188629 115.40721893]
[25.59312820 127.56428528]
[10.46615219 129.18577576]
[-1.06373930 119.82644653]
[-15.95437241 121.63449860]
[-30.18335342 133.04975891]
[-46.07526398 125.98819733]
[-60.86115646 128.51354980]
[-67.61721802 142.48263550]
[-81.30967712 149.78306580]
[-96.67350769 147.60766602]
[-107.80099487 136.79292297]
[-110.41340637 121.49733734]
[-103.50620270 107.60236359]
[-89.73535919 100.45091248]
[-74.39602661 102.79284668]
[-63.38650894 113.72766113]
[-48.60062027 111.20230865]
[-41.16691208 101.37236023]
[-28.60260201 99.32496643]
[-17.76242256 106.74385834]
[-2.87178946 104.93581390]
[6.08322763 93.08915710]
[21.15869141 91.04341125]
[33.52383423 100.51658630]
[48.41447067 98.70853424]
[63.30510330 96.90048218]
[64.88748169 88.89893341]
[68.19242096 81.44197845]
[73.05776978 74.89544678]
[79.24485779 69.58049011]
[86.45014954 65.75785828]
[94.32016754 63.61508560]
[102.46883392 63.25728226]
[110.49638367 64.70200348]
[118.00900269 67.87837982]
[124.63813019 72.63057709]
[130.05856323 78.72547150]
[143.81044006 72.73500061]
[157.56231689 66.74452972]
[166.86758423 53.24104309]
[183.19078064 54.81742859]
[189.74002075 69.85204315]
[179.77799988 82.87855530]
[163.55279541 80.49641418]
[149.80090332 86.48688507]
[136.04902649 92.47735596]
[136.82455444 99.72608185]
[136.15695190 106.98554993]
[134.07237244 113.97125244]
[130.65252686 120.40943909]
[126.03143311 126.04779053]
[134.25161743 138.59483337]
[142.47180176 151.14189148]
[157.82109070 155.80867004]
[163.60842896 170.77149963]
[155.39427185 184.55218506]
[139.47979736 186.57934570]
[128.07325745 175.29794312]
[129.92475891 159.36207581]
[121.70456696 146.81503296]
[113.48437500 134.26797485]
] def
/pairs [
[1 29]
[2 28]
[3 27]
[6 24]
[7 23]
[9 20]
[10 19]
[40 49]
[41 48]
[42 47]
[54 64]
[55 63]
[56 62]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF

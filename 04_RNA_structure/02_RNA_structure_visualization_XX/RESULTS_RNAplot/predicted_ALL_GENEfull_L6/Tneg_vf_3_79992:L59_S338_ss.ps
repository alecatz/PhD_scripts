%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.3
%%CreationDate: Mon Oct 28 18:20:13 2013
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GGTACATACAGAGCACATGTGCTACCTCCGGAGAAGGGCTTTATGAGGGACTTGACTGG\
) def
/coor [
[-0.05325750 126.12635040]
[-14.31910515 130.76161194]
[-28.58495331 135.39686584]
[-42.85079956 140.03211975]
[-57.11664963 144.66737366]
[-71.38249969 149.30262756]
[-73.89639282 164.40026855]
[-83.14780426 176.59329224]
[-97.01082611 183.07984924]
[-112.29983521 182.36933899]
[-125.50152588 174.62506104]
[-133.58226013 161.62658691]
[-134.68511963 146.36085510]
[-128.55670166 132.33584595]
[-116.60525513 122.77438354]
[-101.57714081 119.87363434]
[-86.92571259 124.30015564]
[-76.01775360 135.03677368]
[-61.75190353 130.40151978]
[-47.48605728 125.76626587]
[-33.22020721 121.13101196]
[-18.95436096 116.49575806]
[-4.68851233 111.86050415]
[-1.73404062 102.73368073]
[5.36723232 96.07500458]
[14.93964958 93.64331055]
[24.63207245 96.17704010]
[31.99525833 103.17740631]
[46.81058502 100.83088684]
[61.62590790 98.48436737]
[76.44123077 96.13785553]
[83.16481018 83.07345581]
[96.26540375 76.42067719]
[110.78063202 78.69953918]
[121.21224976 89.04682159]
[136.02757263 86.70030212]
[145.31935120 74.19828033]
[160.37762451 72.02962494]
[172.23913574 80.96495819]
[187.05445862 78.61843872]
[196.14004517 65.68679047]
[211.72274780 63.04956055]
[224.55761719 72.27136230]
[227.02995300 87.88108063]
[217.67295837 100.61772919]
[202.03797913 102.92488861]
[189.40097046 93.43376160]
[174.58564758 95.78028107]
[166.06585693 107.94369507]
[151.07443237 110.53444672]
[138.37408447 101.51563263]
[123.55876923 103.86214447]
[116.83518982 116.92654419]
[103.73459625 123.57932281]
[89.21936798 121.30046082]
[78.78775024 110.95317841]
[63.97242355 113.29969788]
[49.15710068 115.64620972]
[34.34177399 117.99272919]
] def
/pairs [
[1 23]
[2 22]
[3 21]
[4 20]
[5 19]
[6 18]
[28 59]
[29 58]
[30 57]
[31 56]
[35 52]
[36 51]
[39 48]
[40 47]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF

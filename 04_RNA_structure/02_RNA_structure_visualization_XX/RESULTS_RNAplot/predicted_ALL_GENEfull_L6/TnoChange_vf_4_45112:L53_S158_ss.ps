%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.3
%%CreationDate: Mon Oct 28 18:20:13 2013
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
TACTGAAGGGCGTCACTGGCAACATCTGCAACAAACTTTTGTGTAGCCACAGC\
) def
/coor [
[89.53665161 95.87702179]
[82.80466461 82.47253418]
[76.07267761 69.06803894]
[58.80101395 59.33445740]
[59.58130264 40.31219864]
[51.33866882 27.77988243]
[43.09603500 15.24756527]
[34.85339737 2.71524835]
[20.78797150 8.09835243]
[5.89411020 10.33150387]
[-9.13157177 9.31025410]
[-23.58629608 5.08236790]
[-36.79398727 -2.15440750]
[-48.13690186 -12.06159592]
[-57.08450699 -24.17581940]
[-63.21831131 -37.93047333]
[-66.25141907 -52.68223190]
[-66.04197693 -67.74111938]
[-62.59976578 -82.40281677]
[-56.08579636 -95.98155975]
[-46.80473709 -107.84224701]
[-35.19067383 -117.43013763]
[-21.78682518 -124.29679108]
[-7.22010708 -128.12103271]
[7.82816553 -128.72399902]
[22.65415764 -126.07748413]
[36.56443024 -120.30528259]
[48.90837860 -111.67736053]
[59.10865021 -100.59725952]
[66.68815613 -87.58322906]
[71.29240417 -73.24394226]
[72.70602417 -58.25008774]
[70.86291504 -43.30294800]
[65.84927368 -29.10162735]
[57.89960098 -16.31035042]
[47.38571548 -5.52738619]
[55.62834930 7.00493097]
[63.87098694 19.53724861]
[72.11361694 32.06956482]
[82.82775116 33.37758255]
[91.04653168 40.71750259]
[93.65782166 51.65481949]
[89.47716522 62.33605576]
[96.20915222 75.74054718]
[102.94113922 89.14503479]
[110.06015015 102.34805298]
[117.56015015 115.33843231]
[132.02503967 123.06494904]
[132.29560852 139.46186829]
[118.09353638 147.66143799]
[104.02867889 139.22865295]
[104.56976318 122.83843231]
[97.06976318 109.84805298]
] def
/pairs [
[1 45]
[2 44]
[3 43]
[5 39]
[6 38]
[7 37]
[8 36]
[46 53]
[47 52]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF

%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.3
%%CreationDate: Mon Oct 28 18:20:13 2013
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GGACCAGCTGCTGGAGTCATGACTGTTCGTGTCGCGTTGACTCAAAAACTGAGGGAAACAATTCCTTCTATAGGTGCAGTCCAGCT\
) def
/coor [
[92.50000000 329.75045776]
[92.50000000 314.75045776]
[79.53267670 307.42144775]
[71.92427826 294.49981689]
[71.80444336 279.40505981]
[79.30548859 266.19024658]
[92.50000000 258.45382690]
[92.50000000 243.45384216]
[92.50000000 228.45384216]
[92.50000000 213.45384216]
[92.50000000 198.45384216]
[68.25861359 193.49809265]
[46.01039124 182.67121887]
[27.15239716 166.65309143]
[12.86879444 146.44955444]
[4.05650854 123.32925415]
[-10.74588966 125.75598907]
[-23.08463669 136.55818176]
[-38.51967621 131.01817322]
[-41.17276382 114.83506775]
[-28.31462860 104.65663910]
[-13.17261887 110.95359039]
[1.62977862 108.52685547]
[1.63261843 91.44044495]
[4.58106565 74.61034393]
[10.38682938 58.54053116]
[18.87605667 43.71222687]
[29.79453659 30.56945419]
[42.81531525 19.50577736]
[29.07082367 11.66999626]
[29.13899040 -3.22445273]
[21.40568161 -16.07731056]
[5.93199158 -18.33538818]
[-4.43142271 -30.04579544]
[-4.79127312 -45.67923737]
[5.02235031 -57.85408020]
[20.37575531 -60.82173538]
[34.01953125 -53.18096924]
[39.51150894 -38.53951263]
[34.25854111 -23.81061745]
[41.99184799 -10.95776081]
[55.18320465 -4.04130125]
[55.66817474 11.77247047]
[65.34456635 7.54239416]
[75.41739655 4.36996603]
[85.77143097 2.29147625]
[96.28823090 1.33070111]
[106.84748840 1.49863124]
[117.32842255 2.79334569]
[127.61112213 5.20003414]
[137.57797241 8.69116497]
[147.11495972 13.22680283]
[156.11299133 18.75506401]
[164.46913147 25.21270752]
[172.08778381 32.52586365]
[178.88180542 40.61087418]
[184.77348328 49.37525558]
[189.69540405 58.71874619]
[193.59127808 68.53446198]
[196.41653442 78.71012115]
[198.13885498 89.12932587]
[198.73854065 99.67288208]
[198.20874023 110.22017670]
[196.55548096 120.65056610]
[193.79771423 130.84472656]
[189.96696472 140.68603516]
[185.10705566 150.06193542]
[179.27357483 158.86515808]
[172.53327942 166.99501038]
[164.96324158 174.35848999]
[156.65008545 180.87135315]
[147.68888855 186.45910645]
[138.18215942 191.05784607]
[128.23864746 194.61492920]
[117.97212219 197.08970642]
[107.50000000 198.45384216]
[107.50000000 213.45384216]
[107.50000000 228.45384216]
[107.50000000 243.45384216]
[107.50000000 258.45382690]
[120.69451141 266.19024658]
[128.19555664 279.40505981]
[128.07571411 294.49981689]
[120.46732330 307.42144775]
[107.50000000 314.75045776]
[107.50000000 329.75045776]
] def
/pairs [
[1 86]
[2 85]
[7 80]
[8 79]
[9 78]
[10 77]
[11 76]
[16 23]
[17 22]
[29 43]
[31 41]
[32 40]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF

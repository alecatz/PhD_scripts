%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.3
%%CreationDate: Mon Oct 28 18:20:13 2013
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
TATGTCCTTCTACATGACCTATTTAGCGAGATGGCCTGACTATTTTCATGTTGCTGAAGGTCCCGGCAATCGTGTCATGGGTTATAGT\
) def
/coor [
[-65.26367188 216.37948608]
[-73.73429108 228.75885010]
[-82.20491028 241.13821411]
[-90.67553711 253.51756287]
[-99.14615631 265.89694214]
[-95.98808289 281.38247681]
[-104.77449799 294.51922607]
[-120.29256439 297.51339722]
[-133.33569336 288.58859253]
[-136.16563416 273.03973389]
[-127.10342407 260.09170532]
[-111.52551270 257.42630005]
[-103.05489349 245.04695129]
[-94.58427429 232.66758728]
[-86.11365509 220.28822327]
[-77.64302826 207.90885925]
[-80.79824066 202.37100220]
[-82.32239532 196.14830017]
[-82.08114624 189.71316528]
[-80.07490540 183.55926514]
[-76.44016266 178.16365051]
[-71.44036102 173.94978333]
[-65.44686890 171.25433350]
[-58.91141129 170.30026245]
[-52.33203888 171.17858887]
[-46.21516800 173.83995056]
[-34.63051224 164.31126404]
[-33.08999252 152.17279053]
[-23.32157707 144.15162659]
[-10.30955029 145.05726624]
[-6.83341837 138.34381104]
[2.18928885 135.84080505]
[14.41722775 127.15303040]
[26.64516640 118.46524811]
[38.87310791 109.77747345]
[51.10104752 101.08969116]
[63.32898331 92.40191650]
[69.25216675 78.62091827]
[55.47747421 71.47686768]
[48.56280136 57.58561707]
[51.16698074 42.28862762]
[62.28865814 31.46790695]
[77.65131378 29.28424454]
[91.34770203 36.57730103]
[98.11127472 50.54274750]
[95.34130096 65.81058502]
[84.10289764 76.51001740]
[96.29385376 73.38742065]
[107.93910217 75.89878082]
[116.70639038 82.93560791]
[130.03524780 76.05507660]
[134.93067932 61.26750183]
[148.54605103 54.47954178]
[162.61357117 59.23772049]
[175.94242859 52.35719299]
[189.27128601 45.47666550]
[192.53150940 30.18271637]
[204.89149475 20.60331345]
[220.51521301 21.26155853]
[232.02563477 31.84664917]
[233.98789978 47.36063004]
[225.47546387 60.47827148]
[210.50765991 65.00582886]
[196.15180969 58.80551910]
[182.82295227 65.68605042]
[169.49411011 72.56657410]
[165.22525024 86.79023743]
[151.80590820 93.95793915]
[136.91577148 89.38393402]
[123.58692169 96.26445770]
[123.93457794 104.63364410]
[121.34327698 112.78016663]
[116.01417542 119.68360138]
[108.49818420 124.43778229]
[99.64050293 126.36886597]
[90.48603058 125.12865448]
[82.15614319 120.75032806]
[75.71134949 113.65839386]
[72.01676178 104.62985229]
[59.78882599 113.31763458]
[47.56088638 122.00540924]
[35.33294678 130.69319153]
[23.10500717 139.38096619]
[10.87706757 148.06874084]
[-1.19564104 156.97097778]
[-7.74472427 174.06964111]
[-25.10182953 175.89591980]
[-36.68648148 185.42460632]
] def
/pairs [
[1 16]
[2 15]
[3 14]
[4 13]
[5 12]
[26 88]
[27 87]
[30 85]
[32 84]
[33 83]
[34 82]
[35 81]
[36 80]
[37 79]
[38 47]
[50 70]
[51 69]
[54 66]
[55 65]
[56 64]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF

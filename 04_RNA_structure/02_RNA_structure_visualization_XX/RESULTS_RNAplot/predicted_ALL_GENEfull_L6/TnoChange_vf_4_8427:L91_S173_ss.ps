%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.3
%%CreationDate: Mon Oct 28 18:20:13 2013
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
CCTCCCAAAAATCACTTTCGAAAAAACGAGGACCCTCAACGCATACAATAGGTTGATGAATCCATTCCTGATATTCTTCGCCAAGATGACC\
) def
/coor [
[33.46497726 100.13233185]
[20.14669800 107.03330994]
[6.82841921 113.93428802]
[-6.48985910 120.83525848]
[-3.09026837 135.52857971]
[-3.45238519 150.60569763]
[-7.55344629 165.11888123]
[-15.13565636 178.15577698]
[-25.72238922 188.89691162]
[-38.64815521 196.66706848]
[-53.10043335 200.97781372]
[-68.17073059 201.55818176]
[-82.91172791 198.37167358]
[-96.39678955 191.61860657]
[-107.77822876 181.72346497]
[-116.34060669 169.30828857]
[-121.54567719 155.15350342]
[-123.06624603 140.14888000]
[-120.80673218 125.23763275]
[-114.90917206 111.35708618]
[-105.74429321 99.37978363]
[-93.88819885 90.05863190]
[-80.08617401 83.97956848]
[-65.20583344 81.52472687]
[-50.18256378 82.84841156]
[-35.96073914 87.86743164]
[-23.43435669 96.26627350]
[-13.39083481 107.51698303]
[-0.07255623 100.61600494]
[13.24572182 93.71503448]
[26.56400108 86.81405640]
[11.84955692 83.90112305]
[-1.40246403 76.87375641]
[-12.06904221 66.32746887]
[-19.24625206 53.15600204]
[-22.32587624 38.47554016]
[-21.04693222 23.53016281]
[-15.51780415 9.58639145]
[-6.20704985 -2.17412925]
[6.09630537 -10.75477314]
[20.34963226 -15.42838573]
[35.34505463 -15.79890919]
[49.81180954 -11.83494473]
[62.52393341 -3.87241149]
[72.40415192 7.41391706]
[78.61518860 21.06759834]
[80.63069916 35.93157196]
[78.27987671 50.74621582]
[71.76193237 64.25608063]
[61.62923431 75.31629944]
[48.73683929 82.99107361]
[63.59712982 85.03357697]
[78.45742035 87.07607269]
[93.31770325 89.11857605]
[107.94972229 85.81643677]
[120.49245453 77.58966064]
[133.03518677 69.36288452]
[145.57792664 61.13610458]
[152.46913147 46.25513458]
[168.82411194 45.05229950]
[177.81825256 58.76497650]
[170.19915771 73.28673553]
[153.80470276 73.67883301]
[141.26196289 81.90561676]
[128.71923828 90.13239288]
[116.17649841 98.35916901]
[115.02854919 105.77079773]
[129.97994995 104.56442261]
[144.93136597 103.35805511]
[159.59172058 100.18407440]
[172.28565979 108.17556000]
[175.76161194 122.76726532]
[168.03387451 135.62347412]
[153.51704407 139.39991760]
[140.50445557 131.93977356]
[126.61854553 126.26691437]
[112.73263550 120.59404755]
[111.58467865 128.00567627]
[121.05099487 139.64134216]
[136.79867554 142.70570374]
[144.09333801 156.99441528]
[137.33914185 171.54641724]
[121.71734619 175.19863892]
[109.21163177 165.14942932]
[109.41532898 149.10766602]
[99.94900513 137.47198486]
[87.25964355 119.78317261]
[91.27520752 103.97885895]
[76.41491699 101.93636322]
[61.55463028 99.89385986]
[46.69433975 97.85136414]
] def
/pairs [
[1 31]
[2 30]
[3 29]
[4 28]
[51 91]
[52 90]
[53 89]
[54 88]
[55 66]
[56 65]
[57 64]
[58 63]
[78 86]
[79 85]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF

%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.3
%%CreationDate: Mon Oct 28 18:20:13 2013
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GGATGAGTTGAGAGATGCTGTGCTTCTCGTTTTTGCTAACAAGCAAGATCTTCC\
) def
/coor [
[98.34661102 190.79510498]
[98.34661102 175.79510498]
[98.34661102 160.79510498]
[90.60930634 148.06784058]
[98.34661102 134.26766968]
[98.34661102 119.26766205]
[87.01036072 109.44475555]
[72.16304016 111.57947540]
[65.04110718 125.36561584]
[51.16096497 132.30256653]
[35.85981750 129.72293091]
[25.02126694 118.61863708]
[22.81295586 103.25949860]
[30.08402824 89.55142975]
[44.03860474 82.76545715]
[59.31086731 85.51093292]
[70.02832031 96.73215485]
[84.87564087 94.59742737]
[70.72240448 89.62893677]
[59.67195511 79.48558807]
[53.51231003 65.80864716]
[53.24014282 50.81111526]
[58.89948654 36.91968536]
[69.57463074 26.38207245]
[83.53827667 20.90332603]
[98.53102112 21.36993599]
[112.12694550 27.70640373]
[122.12615204 38.88745117]
[126.91071320 53.10391998]
[125.70645142 68.05550385]
[118.70823669 81.32293701]
[107.04610443 90.76068115]
[121.74734497 87.78182220]
[136.44857788 84.80296326]
[151.14981079 81.82411194]
[165.85105896 78.84525299]
[174.37449646 65.53636169]
[189.82995605 62.23419189]
[203.04798889 70.89786530]
[206.18656921 86.38736725]
[197.38363647 99.51306152]
[181.86180115 102.48770905]
[168.82991028 93.54649353]
[154.12867737 96.52534485]
[139.42744446 99.50420380]
[124.72619629 102.48306274]
[110.02496338 105.46192169]
[112.96411133 111.64691162]
[113.34661102 119.26766205]
[113.34661102 134.26766968]
[121.08390808 148.06784058]
[113.34661102 160.79510498]
[113.34661102 175.79510498]
[113.34661102 190.79510498]
] def
/pairs [
[1 54]
[2 53]
[3 52]
[5 50]
[6 49]
[7 18]
[8 17]
[32 47]
[33 46]
[34 45]
[35 44]
[36 43]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF

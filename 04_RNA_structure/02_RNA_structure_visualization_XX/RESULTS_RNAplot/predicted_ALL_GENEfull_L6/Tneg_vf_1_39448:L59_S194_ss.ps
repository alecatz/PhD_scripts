%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.3
%%CreationDate: Mon Oct 28 18:20:13 2013
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GCCGATGCTGATGACATTCAACCTATTGTCTGTGACAATGGTACTGGAATGGTTAAGGT\
) def
/coor [
[86.50383759 104.79885864]
[71.83162689 101.68018341]
[56.72434235 106.37918854]
[45.88386917 96.16481781]
[31.21165466 93.04614258]
[16.53944016 89.92746735]
[10.77497864 91.85836029]
[5.47817612 91.13832855]
[1.67979765 88.49884033]
[-0.09969919 84.99872589]
[-14.10340595 79.62320709]
[-28.10711288 74.24768829]
[-42.11081696 68.87216949]
[-53.99626160 78.60005951]
[-69.15588379 81.06609344]
[-83.51183319 75.60693359]
[-93.20241547 63.69105911]
[-95.62092590 48.52377701]
[-90.11679077 34.18501663]
[-78.17059326 24.53182793]
[-62.99580765 22.16087341]
[-48.67436981 27.70992661]
[-39.05867767 39.68631744]
[-36.73529816 54.86846161]
[-22.73159218 60.24398041]
[-8.72788620 65.61949921]
[5.27582026 70.99501801]
[19.65811539 75.25524902]
[34.33032990 78.37392426]
[49.00254440 81.49259949]
[63.06037140 76.57052612]
[74.95030212 87.00796509]
[89.62251282 90.12664032]
[102.97811890 85.98906708]
[113.49616241 95.20114136]
[128.16838074 98.31981659]
[136.16551208 87.61658478]
[147.65130615 80.88479614]
[160.80278015 79.14988708]
[173.54927063 82.64761353]
[183.89834595 90.79277802]
[190.24731445 102.27678680]
[191.63134766 115.27777863]
[205.89718628 119.91303253]
[220.16304016 124.54828644]
[235.05274963 118.57535553]
[248.93449402 126.61754608]
[251.15937805 142.50556946]
[240.02066040 154.05151367]
[224.06301880 152.39828491]
[215.52778625 138.81413269]
[201.26193237 134.17887878]
[186.99609375 129.54362488]
[174.98339844 141.38491821]
[158.60601807 145.76852417]
[142.11759949 141.46780396]
[129.84429932 129.52317810]
[125.04969788 112.99203491]
[110.37748718 109.87335968]
] def
/pairs [
[1 33]
[2 32]
[4 30]
[5 29]
[6 28]
[10 27]
[11 26]
[12 25]
[13 24]
[35 59]
[36 58]
[43 53]
[44 52]
[45 51]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF

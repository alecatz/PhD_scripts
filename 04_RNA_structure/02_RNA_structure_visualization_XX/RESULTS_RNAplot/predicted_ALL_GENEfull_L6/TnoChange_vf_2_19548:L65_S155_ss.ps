%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.3
%%CreationDate: Mon Oct 28 18:20:13 2013
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
CCGCAGATCTTGATGGGAGCTTCCAATTCAAGCAGATTGGGCTGTTGAAGAAATATTTCTTTGGA\
) def
/coor [
[209.78596497 168.58746338]
[196.14147949 162.35623169]
[186.50764465 166.90457153]
[175.76965332 165.16728210]
[167.73703003 157.50407410]
[165.40390015 146.42120361]
[152.41351318 138.92120361]
[139.42312622 131.42120361]
[126.43275452 123.92121124]
[113.44236755 116.42121124]
[101.46926117 121.17060852]
[88.95487213 118.12066650]
[80.50955963 108.39500427]
[79.24459839 95.57657623]
[63.45205307 94.62467194]
[56.92829132 81.23475647]
[44.30948639 73.12514496]
[35.04801178 70.99952698]
[31.29600716 64.31736755]
[19.07736778 55.61651611]
[3.08166933 56.84826660]
[-7.74864292 45.01256180]
[-5.10548115 29.18874359]
[8.98354721 21.51548958]
[23.71054459 27.87906265]
[27.77822113 43.39787674]
[39.99686050 52.09873199]
[52.41909790 60.50634384]
[65.03790283 68.61595917]
[79.92786407 68.98780823]
[87.35420990 82.95777893]
[103.21619415 79.02359772]
[117.17082977 87.52938843]
[120.94236755 103.43083191]
[133.93275452 110.93083191]
[146.92312622 118.43083191]
[159.91351318 125.93083191]
[172.90390015 133.43083191]
[192.77604675 132.17947388]
[202.37269592 148.71176147]
[216.01718140 154.94297791]
[210.74005127 140.90190125]
[210.43940735 125.90492249]
[215.14955139 111.66362762]
[224.33294678 99.80338287]
[236.94146729 91.67780304]
[251.53611755 88.21424866]
[266.45120239 89.80802155]
[279.98449707 96.27722168]
[290.59140015 106.88352203]
[297.06137085 120.41642761]
[298.65597534 135.33142090]
[295.19326782 149.92626953]
[287.06838989 162.53526306]
[275.20867920 171.71932983]
[260.96765137 176.43029785]
[245.97064209 176.13049316]
[231.92707825 170.85289001]
[238.15830994 184.49736023]
[251.82324219 193.56387329]
[250.53398132 209.91226196]
[235.61679077 216.72471619]
[222.41720581 206.99316406]
[224.51382446 190.72859192]
[218.28260803 177.08410645]
] def
/pairs [
[1 41]
[2 40]
[6 38]
[7 37]
[8 36]
[9 35]
[10 34]
[14 31]
[16 29]
[17 28]
[19 27]
[20 26]
[58 65]
[59 64]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF

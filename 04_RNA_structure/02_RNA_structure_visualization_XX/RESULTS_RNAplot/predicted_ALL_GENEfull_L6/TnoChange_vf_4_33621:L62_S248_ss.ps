%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.3
%%CreationDate: Mon Oct 28 18:20:13 2013
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
AGGTATTCCATTGCTTTGGGCAGTACTTCTGCCTCCATTTCGAAGCGTTCCAGCTTGGGATG\
) def
/coor [
[86.67953491 105.26694489]
[71.90742493 102.66222382]
[57.13530350 100.05749512]
[42.36318970 97.45277405]
[33.11714172 110.61905670]
[19.14988899 118.48753357]
[3.21253443 119.56513977]
[-11.58012867 113.69082642]
[-22.35837173 102.05740356]
[-27.05422974 86.96969604]
[-41.93781662 85.10453796]
[-56.82140732 83.23937988]
[-71.70499420 81.37422943]
[-83.04431915 92.14240265]
[-98.65549469 93.05092621]
[-111.16738129 83.67081451]
[-114.67227173 68.43106842]
[-107.51524353 54.52743530]
[-93.07563782 48.52478409]
[-78.17139435 53.25738144]
[-69.83983612 66.49063873]
[-54.95624924 68.35579681]
[-40.07266235 70.22095490]
[-25.18907356 72.08610535]
[-18.11702919 59.92222214]
[-6.86429834 51.40254974]
[6.84676743 47.87352371]
[20.90110779 49.91443634]
[33.11721420 57.24265671]
[41.58574295 68.75222778]
[44.96791077 82.68065643]
[59.74002838 85.28537750]
[74.51214600 87.89010620]
[89.28426361 90.49482727]
[102.48732758 85.89366913]
[113.32046509 94.73305511]
[128.09257507 97.33777618]
[140.94837952 88.54198456]
[155.89230347 91.39398193]
[164.19853210 103.70423126]
[178.97064209 106.30895233]
[193.74275208 108.91368103]
[208.51487732 111.51840210]
[217.90417480 109.89911652]
[223.95054626 114.63879395]
[238.57447815 117.97660065]
[251.82131958 109.35705566]
[267.26568604 112.71073914]
[275.74468994 126.04798126]
[272.22790527 141.45602417]
[258.80175781 149.79354858]
[243.43177795 146.11405945]
[235.23666382 132.60052490]
[220.61273193 129.26271057]
[205.91015625 126.29051971]
[191.13803101 123.68579102]
[176.36592102 121.08106995]
[161.59379578 118.47634888]
[149.57815552 127.20330811]
[134.56002808 124.77218628]
[125.48785400 112.10989380]
[110.71573639 109.50517273]
] def
/pairs [
[1 34]
[2 33]
[3 32]
[4 31]
[10 24]
[11 23]
[12 22]
[13 21]
[36 62]
[37 61]
[40 58]
[41 57]
[42 56]
[43 55]
[45 54]
[46 53]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF

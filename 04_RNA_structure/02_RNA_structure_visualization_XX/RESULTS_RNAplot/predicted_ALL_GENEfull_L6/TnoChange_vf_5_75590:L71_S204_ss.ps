%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.3
%%CreationDate: Mon Oct 28 18:20:13 2013
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
AGATGCGGTAATGTAGCTGCAATTCTAGAGCTCGATGAGAATCTAAACAAAGAGTTTCGTGTCTTCGATGC\
) def
/coor [
[36.03347397 129.47564697]
[22.17528152 135.21589661]
[8.31708908 140.95614624]
[-2.84050751 157.48582458]
[-21.81262589 154.92599487]
[-35.11779022 161.85223389]
[-48.42295074 168.77845764]
[-61.72811508 175.70468140]
[-75.03327942 182.63092041]
[-79.54608917 197.77720642]
[-93.48672485 205.22261047]
[-108.58445740 200.54992676]
[-115.88206482 186.53134155]
[-111.05001068 171.48387146]
[-96.95506287 164.33486938]
[-81.95950317 169.32575989]
[-68.65434265 162.39952087]
[-55.34918213 155.47329712]
[-42.04401779 148.54705811]
[-28.73885536 141.62083435]
[-26.41917419 131.27682495]
[-18.50604820 123.89096832]
[-7.58500242 122.22105408]
[2.57683802 127.09795380]
[16.43503189 121.35770416]
[30.29322433 115.61745453]
[33.50561523 105.51498413]
[42.03235245 98.84689331]
[53.05738068 98.13517761]
[62.75550461 103.87917328]
[77.06125641 99.36859131]
[80.31909180 88.19972992]
[88.63583374 80.06409454]
[99.87370300 77.05291748]
[111.14403534 79.94021606]
[119.54982758 87.98381042]
[134.19427490 84.73722076]
[148.83871460 81.49062347]
[163.48315430 78.24402618]
[175.28153992 67.70323181]
[189.38179016 72.50244141]
[204.02622986 69.25584412]
[218.59635925 65.69055939]
[226.53041077 52.28576279]
[241.27951050 48.55496979]
[254.01004028 56.20148849]
[268.49893188 52.31920242]
[282.98782349 48.43691635]
[292.22229004 35.31807709]
[308.24459839 34.50228500]
[318.76376343 46.61534882]
[315.71041870 62.36516190]
[301.42681885 69.66981506]
[286.87008667 62.92580414]
[272.38119507 66.80809021]
[257.89233398 70.69037628]
[250.69062805 83.67771912]
[236.05213928 87.82131195]
[222.47863770 80.17944336]
[216.65299988 85.10678101]
[207.27282715 83.90028381]
[192.62838745 87.14688110]
[181.87745667 97.45545959]
[166.72973633 92.88846588]
[152.08529663 96.13506317]
[137.44085693 99.38166046]
[122.79642487 102.62825012]
[114.06710052 118.13011932]
[96.88259888 122.73469543]
[81.57184601 113.67434692]
[67.26609039 118.18492889]
] def
/pairs [
[1 26]
[2 25]
[3 24]
[5 20]
[6 19]
[7 18]
[8 17]
[9 16]
[30 71]
[31 70]
[36 67]
[37 66]
[38 65]
[39 64]
[41 62]
[42 61]
[43 59]
[46 56]
[47 55]
[48 54]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF

%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.3
%%CreationDate: Mon Oct 28 18:18:49 2013
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
TGAAGATCCTTACCGAGAGAGGTTACATGTTCACCACAACAGCAGAACGGGAAATTGTGAGAGACATCAAGGAGAAGCTTTCCTTTGTCGCTGTCGACTACGAGCAAGAGATGGAGACCTCGAAAACCAGCTC\
) def
/coor [
[74.22550201 119.87208557]
[63.49529648 130.35362244]
[52.76509094 140.83517456]
[42.03488541 151.31671143]
[46.05380630 170.78559875]
[37.69748688 188.66699219]
[20.43430138 197.93939209]
[1.19249129 195.07391357]
[-8.50905704 206.51419067]
[-18.21060562 217.95446777]
[-27.91215515 229.39474487]
[-25.09881973 244.77717590]
[-32.87620544 258.34353638]
[-47.57207108 263.68823242]
[-62.24747467 258.28762817]
[-69.97314453 244.69172668]
[-67.10124969 229.32012939]
[-54.98781586 219.43080139]
[-39.35243225 219.69320679]
[-29.65088463 208.25291443]
[-19.94933510 196.81263733]
[-10.24778652 185.37236023]
[-14.92980671 175.92034912]
[-16.15622902 165.40504456]
[-13.75772285 155.05419922]
[-7.98973322 146.08520508]
[0.49445900 139.56188965]
[10.71764469 136.26832581]
[21.49121475 136.61473083]
[31.55334473 140.58650208]
[42.28355026 130.10496521]
[53.01375580 119.62342072]
[63.74395752 109.14188385]
[49.30220032 113.19596863]
[34.86044312 117.25005341]
[21.98223686 124.94107819]
[7.00629139 125.79021454]
[-6.65874624 119.60420227]
[-15.90259933 107.79102325]
[-18.62128830 93.03945923]
[-14.19601917 78.70708466]
[-3.63401866 68.05606842]
[10.66071415 63.51067352]
[25.43457794 66.10546875]
[37.32496643 75.24991608]
[51.19347000 80.96521759]
[65.06197357 86.68051910]
[55.63127518 75.01595306]
[46.20058441 63.35139465]
[36.76988983 51.68682861]
[21.27859688 46.30614090]
[18.45892906 30.15121841]
[31.21152306 19.84086227]
[46.41759872 25.98148346]
[48.43445206 42.25613785]
[57.86514664 53.92070007]
[67.29583740 65.58526611]
[76.72653198 77.24982452]
[90.75031281 69.16530609]
[106.75836182 68.88697815]
[120.74248505 76.31339264]
[115.36373901 61.69467545]
[121.78941345 47.90463257]
[135.75927734 42.86690903]
[141.90312195 29.18286324]
[148.04698181 15.49882030]
[138.30221558 3.80262423]
[134.61706543 -10.90474129]
[137.67048645 -25.69314194]
[146.80441284 -37.64021301]
[160.16461182 -44.40885544]
[175.07696533 -44.70431900]
[181.22080994 -58.38836288]
[176.88526917 -73.83448029]
[186.37492371 -86.76993561]
[202.41012573 -87.27175903]
[212.69004822 -74.95498657]
[209.32879639 -59.26799774]
[194.90486145 -52.24450684]
[188.76100159 -38.56046295]
[198.44903564 -27.21993256]
[202.26820374 -12.73810577]
[199.40922546 2.02628517]
[190.38656616 14.13462067]
[176.94686890 21.15328026]
[161.73103333 21.64267540]
[155.58717346 35.32672119]
[149.44331360 49.01076126]
[154.96112061 62.79805374]
[148.92532349 76.76313782]
[134.42652893 82.45724487]
[141.04129028 68.99452209]
[153.31632996 60.37343216]
[168.22489929 58.71977234]
[182.09083557 64.44129181]
[191.49508667 76.12718964]
[194.11874390 90.89595032]
[189.31488037 105.10591125]
[178.26803589 115.25317383]
[163.70211792 118.83563995]
[149.20878601 114.96994019]
[138.36247253 104.61031342]
[148.84400940 115.34051514]
[159.32554626 126.07072449]
[169.80709839 136.80093384]
[182.79446411 129.14642334]
[197.23651123 124.82309723]
[212.29354858 124.08230591]
[227.09020996 126.96711731]
[240.76623535 133.30981445]
[252.52651978 142.74163818]
[261.68731689 154.71423340]
[267.71606445 168.53153992]
[270.26220703 183.39022827]
[269.17776489 198.42643738]
[264.52575684 212.76596069]
[256.57666016 225.57514954]
[245.79261780 236.10928345]
[232.80061340 243.75592041]
[218.35595703 248.07048035]
[203.29846191 248.80215454]
[188.50355530 245.90837097]
[174.83137512 239.55737305]
[163.07681274 230.11842346]
[153.92327881 218.14027405]
[147.90292358 204.31932068]
[145.36576843 189.45909119]
[146.45933533 174.42355347]
[151.12002563 160.08683777]
[159.07688904 147.28247070]
[148.59535217 136.55226135]
[138.11380005 125.82205963]
[127.63226318 115.09185791]
] def
/pairs [
[1 33]
[2 32]
[3 31]
[4 30]
[8 22]
[9 21]
[10 20]
[11 19]
[47 58]
[48 57]
[49 56]
[50 55]
[61 91]
[64 88]
[65 87]
[66 86]
[72 80]
[73 79]
[102 133]
[103 132]
[104 131]
[105 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF

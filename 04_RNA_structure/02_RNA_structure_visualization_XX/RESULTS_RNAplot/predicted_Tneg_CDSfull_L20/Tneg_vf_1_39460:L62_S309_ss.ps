%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.3
%%CreationDate: Mon Oct 28 18:18:49 2013
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GTGGATCTCTAAGGCAGAGTATGATGAAGCAGGTCCAGGCATTGTCCACAGAAAATGCTTCT\
) def
/coor [
[88.97336578 97.86405945]
[79.91629791 85.90707397]
[70.85923004 73.95008087]
[61.80216217 61.99309540]
[52.74509811 50.03610611]
[43.68803024 38.07912064]
[28.34407806 42.23682022]
[12.60718727 40.27051926]
[-1.17576051 32.50251007]
[-10.96030617 20.11813927]
[-15.30765820 4.98499966]
[-13.59620667 -10.62866402]
[-6.11023378 -24.39394379]
[-15.75204849 -35.88460922]
[-25.39386177 -47.37527466]
[-39.41341782 -41.69132996]
[-54.50338745 -40.61987686]
[-69.18540955 -44.26589203]
[-82.02108765 -52.27217102]
[-91.75291443 -63.85433960]
[-97.42746735 -77.87770081]
[-98.48880768 -92.96838379]
[-94.83296204 -107.64796448]
[-86.81807709 -120.47827148]
[-75.22939301 -130.20234680]
[-61.20223236 -135.86749268]
[-46.11083984 -136.91871643]
[-31.43371582 -133.25303650]
[-18.60877800 -125.22956085]
[-8.89247990 -113.63436127]
[-3.23672605 -99.60340881]
[-2.19561028 -84.51131439]
[-5.87112999 -69.83664703]
[-13.90319538 -57.01708984]
[-4.26138115 -45.52642441]
[5.38043261 -34.03575897]
[18.78578186 -38.79931259]
[33.04162598 -38.63767242]
[46.39197540 -33.54986954]
[57.18515396 -24.14301491]
[64.07815552 -11.55992985]
[66.20373535 2.65967655]
[63.27944565 16.76759529]
[55.64501953 29.02205467]
[64.70208740 40.97904205]
[73.75915527 52.93602753]
[82.81621552 64.89301300]
[91.87328339 76.85000610]
[100.93035126 88.80699158]
[110.28269958 100.53446198]
[119.92451477 112.02513123]
[129.56632996 123.51580048]
[139.20814514 135.00646973]
[155.00050354 137.83148193]
[162.51118469 152.00784302]
[155.97860718 166.66065979]
[140.41403198 170.54954529]
[127.75725555 160.69128418]
[127.71747589 144.64828491]
[118.07566071 133.15760803]
[108.43384552 121.66694641]
[98.79203033 110.17627716]
] def
/pairs [
[1 49]
[2 48]
[3 47]
[4 46]
[5 45]
[6 44]
[13 36]
[14 35]
[15 34]
[50 62]
[51 61]
[52 60]
[53 59]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF

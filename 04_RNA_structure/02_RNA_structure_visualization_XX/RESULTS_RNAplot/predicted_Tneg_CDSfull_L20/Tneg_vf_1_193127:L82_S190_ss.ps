%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.3
%%CreationDate: Mon Oct 28 18:18:49 2013
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
CGGAAAATGGATCTTGAGGCAAGAAGTTTGCAGCCGAGTGCTAAAGCTGTGTGTCTTTCTAAACTAAGAGAGTATAAATCTG\
) def
/coor [
[95.52490234 286.73794556]
[95.52490234 271.73794556]
[95.52490234 256.73794556]
[95.52490234 241.73794556]
[85.13377380 233.87596130]
[81.18437195 221.25303650]
[85.36351776 208.49774170]
[96.33275604 200.42669678]
[96.90038300 185.43743896]
[82.62170410 172.51745605]
[82.04541016 152.97489929]
[95.95081329 138.81533813]
[94.81638336 123.85829926]
[93.68195343 108.90125275]
[81.67302704 115.74490356]
[66.58103180 116.80751038]
[51.84885025 113.98564148]
[37.06591034 111.44306946]
[22.28297234 108.90048981]
[7.50003195 106.35791779]
[-6.37979507 114.40341187]
[-21.27093315 108.43402863]
[-25.75017548 93.02896118]
[-16.38143158 80.00566864]
[-0.35159966 79.35449982]
[10.04260540 91.57497406]
[24.82554626 94.11755371]
[39.60848618 96.66012573]
[54.39142609 99.20269775]
[61.69866562 97.18235779]
[69.68119049 102.13137817]
[75.68138123 97.63162994]
[61.88736725 91.73882294]
[60.09358597 76.84646606]
[72.09380341 67.84675598]
[85.88792419 73.73930359]
[87.68176270 88.63214111]
[93.68195343 84.13239288]
[94.81638336 69.17535400]
[84.32942200 57.35168457]
[85.35800171 41.58090210]
[97.29187775 31.21953011]
[113.05090332 32.41478729]
[123.28552246 44.45755005]
[121.92372131 60.20306015]
[109.77342224 70.30978394]
[108.63899231 85.26682281]
[114.00970459 71.26127625]
[123.18655396 59.39596558]
[135.39184570 50.67640686]
[149.59127808 45.84152603]
[164.58154297 45.30104828]
[179.09230042 49.10076904]
[191.89385986 56.91868973]
[201.90139771 68.09230042]
[208.26679993 81.67469788]
[210.45066833 96.51486969]
[208.26792908 111.35520935]
[201.90354919 124.93808746]
[191.89686584 136.11245728]
[179.09590149 143.93135071]
[164.58543396 147.73217773]
[149.59512329 147.19282532]
[135.39532471 142.35902405]
[123.18936920 133.64039612]
[114.01161957 121.77577972]
[108.63899231 107.76682281]
[109.77342224 122.72386169]
[110.90785217 137.68090820]
[120.86048889 142.60792542]
[127.70894623 151.24569702]
[130.19912720 161.89965820]
[127.92328644 172.51745605]
[121.38496399 181.08424377]
[111.88964081 186.00506592]
[111.32201385 200.99432373]
[123.41391754 213.46752930]
[122.87998199 230.49702454]
[110.52490234 241.73794556]
[110.52490234 256.73794556]
[110.52490234 271.73794556]
[110.52490234 286.73794556]
] def
/pairs [
[1 82]
[2 81]
[3 80]
[4 79]
[8 76]
[9 75]
[12 69]
[13 68]
[14 67]
[16 31]
[17 29]
[18 28]
[19 27]
[20 26]
[38 47]
[39 46]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF

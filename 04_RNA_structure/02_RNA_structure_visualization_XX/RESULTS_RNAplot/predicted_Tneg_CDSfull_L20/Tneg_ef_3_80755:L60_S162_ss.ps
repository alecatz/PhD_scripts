%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.3
%%CreationDate: Mon Oct 28 18:18:49 2013
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
CGCCGAAGAAGTTCTTGGTGTGGCTACGTGATTCATATGTTAAGATGATGATGCGGTTGG\
) def
/coor [
[83.08893585 157.77941895]
[69.84875488 150.72976685]
[66.49279022 163.45278931]
[55.62175751 170.11859131]
[43.55473328 167.51017761]
[43.18810272 182.93318176]
[34.52244949 195.69680786]
[20.32295418 201.72821045]
[5.12062502 199.10281372]
[-6.23353052 188.65835571]
[-10.11644268 173.72763062]
[-5.28908873 159.07498169]
[6.70814085 149.37600708]
[22.04697227 147.72561646]
[35.83284378 154.65045166]
[43.26166534 138.94392395]
[61.47510147 138.28460693]
[50.44049072 110.57927704]
[56.00339508 83.35659790]
[74.17819214 65.11408234]
[58.87455368 64.87470245]
[45.44065475 57.54059982]
[36.96351242 44.79710770]
[35.39110184 29.57258415]
[41.08475876 15.36551380]
[52.73611832 5.44057608]
[67.66778564 2.07844973]
[82.44857025 6.05172682]
[93.68196106 16.44737816]
[98.78660583 30.87655640]
[96.58948517 46.02354431]
[87.59549713 58.40767670]
[102.51120758 56.67002106]
[117.12631989 60.11914825]
[129.69134521 68.34217834]
[141.68893433 59.33896637]
[143.67140198 43.65951157]
[156.21128845 34.04043198]
[171.86891174 36.18856430]
[181.35487366 48.82945633]
[179.04132080 64.46348572]
[166.30084229 73.81526947]
[150.69213867 71.33655548]
[138.69454956 80.33976746]
[142.28860474 86.16661835]
[144.98640442 92.63870239]
[146.67413330 99.61510468]
[147.26058960 106.93520355]
[146.68057251 114.42230988]
[144.89759827 121.88795471]
[141.90600586 129.13662720]
[137.73216248 135.97082520]
[132.43493652 142.19636536]
[126.10520935 147.62768555]
[140.08003235 156.20886230]
[139.36549377 172.59243774]
[124.69667816 179.92439270]
[111.16358185 170.66224670]
[112.68790436 154.33410645]
[98.08893585 157.77941895]
] def
/pairs [
[1 60]
[2 17]
[5 15]
[20 32]
[35 44]
[36 43]
[54 59]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF

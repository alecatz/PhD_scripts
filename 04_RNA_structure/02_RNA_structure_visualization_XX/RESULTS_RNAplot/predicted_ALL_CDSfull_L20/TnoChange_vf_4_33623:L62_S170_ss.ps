%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.3
%%CreationDate: Mon Oct 28 17:49:41 2013
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GCTACAGCTTAGAAGTGGGAGGCAGTGGGAGGAAGCTAACATGGGAAGGAACCCCAAGAAGC\
) def
/coor [
[92.50000000 197.58340454]
[92.50000000 182.58340454]
[92.50000000 167.58340454]
[63.10778046 157.12033081]
[41.48197937 134.63247681]
[32.08529282 147.36090088]
[17.30205727 145.54287720]
[3.62946963 151.71218872]
[-10.04311848 157.88148499]
[-19.17147636 171.50518799]
[-35.51385498 170.14181519]
[-42.25860977 155.19389343]
[-32.46732330 142.03855896]
[-16.21242523 144.20890808]
[-2.53983712 138.03959656]
[11.13275051 131.87028503]
[19.55148125 119.58312988]
[35.31267166 120.95989227]
[33.01189423 111.67738342]
[32.03614807 102.16389465]
[32.40473557 92.60759735]
[34.11036301 83.19752502]
[37.11929321 74.11981201]
[41.37200928 65.55400848]
[46.78439331 57.66955185]
[53.24938583 50.62239456]
[60.63911438 44.55193329]
[68.80740356 39.57823944]
[77.59268188 35.79969025]
[86.82118225 33.29103088]
[96.31036377 32.10188293]
[105.87252045 32.25576782]
[115.31851959 33.74963760]
[124.46151733 36.55394745]
[133.12066650 40.61322784]
[141.12467957 45.84717941]
[148.31524658 52.15228271]
[154.55014038 59.40382004]
[159.70602417 67.45835114]
[163.68090820 76.15656281]
[166.39617920 85.32639313]
[167.79812622 94.78647614]
[167.85902405 104.34967804]
[182.63114929 106.95439911]
[193.02299500 95.55207062]
[207.93559265 91.60015869]
[222.61041260 96.35970306]
[232.36476135 108.31195068]
[234.08605957 123.64299011]
[227.22503662 137.46073914]
[213.97105408 145.35598755]
[198.55337524 144.80941772]
[185.89173889 135.99542236]
[180.02642822 121.72651672]
[165.25430298 119.12179565]
[159.00688171 133.79281616]
[149.51457214 146.60551453]
[137.29936218 156.85530090]
[123.03299713 163.97850037]
[107.50000000 167.58340454]
[107.50000000 182.58340454]
[107.50000000 197.58340454]
] def
/pairs [
[1 62]
[2 61]
[3 60]
[5 18]
[7 16]
[8 15]
[9 14]
[43 55]
[44 54]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF

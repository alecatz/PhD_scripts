%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.3
%%CreationDate: Mon Oct 28 17:49:41 2013
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GCATTCCAAGCTTTTGCTATTTGTTTAAGCAGCTTCGACACGAAGCCAGTCTGCGAA\
) def
/coor [
[39.30600739 192.23471069]
[30.22839546 204.17610168]
[33.85809708 219.38659668]
[26.81529617 233.34843445]
[12.42538643 239.46926880]
[-2.51715565 234.85900879]
[-10.95691967 221.69450378]
[-8.90890598 206.19160461]
[2.65987563 195.67033386]
[18.28700066 195.09849548]
[27.36461258 183.15708923]
[28.90721893 168.34259033]
[43.41833878 162.03877258]
[52.49595261 150.09738159]
[61.57356644 138.15599060]
[70.65117645 126.21459198]
[79.72879028 114.27319336]
[74.54341888 105.15686798]
[73.46266174 94.23994446]
[77.05885315 83.36623383]
[85.08156586 74.52882385]
[96.43983459 69.50704956]
[92.42691040 55.05379868]
[88.41397858 40.60054779]
[76.34105682 29.50205231]
[80.17976379 13.55851460]
[95.98115540 9.17127800]
[107.49012756 20.85355568]
[102.86723328 36.58762360]
[106.88015747 51.04087067]
[110.89308167 65.49412537]
[123.95063782 72.87654877]
[138.40388489 68.86362457]
[152.85713196 64.85069275]
[155.06184387 49.78221130]
[163.21031189 36.91667175]
[175.89080811 28.48310661]
[190.90634155 25.94268417]
[205.65538025 29.73554611]
[217.58256531 39.20455551]
[224.62142944 52.70915222]
[225.55247498 67.90958405]
[220.21437073 82.17227936]
[209.53196716 93.02614594]
[195.35607910 98.59067535]
[180.14276123 97.90179443]
[166.52778625 91.07884216]
[156.87007141 79.30394745]
[142.41680908 83.31687164]
[127.96356201 87.32979584]
[126.94726562 109.96494293]
[111.32537079 124.24681854]
[91.67018890 123.35080719]
[82.59257507 135.29220581]
[73.51496124 147.23359680]
[64.43734741 159.17498779]
[55.35973358 171.11639404]
] def
/pairs [
[1 11]
[2 10]
[13 57]
[14 56]
[15 55]
[16 54]
[17 53]
[22 31]
[23 30]
[24 29]
[32 50]
[33 49]
[34 48]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF

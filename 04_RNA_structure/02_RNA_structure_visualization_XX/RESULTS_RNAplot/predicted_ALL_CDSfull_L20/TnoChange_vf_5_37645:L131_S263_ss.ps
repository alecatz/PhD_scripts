%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.3
%%CreationDate: Mon Oct 28 17:49:41 2013
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
TGACGAGGGTCAGCAGCACACATCATGTTCTTTGCATCCCACATCTGCTGGGTCAGTTCAGGAACACTCAAGGCACTGTATTGCTGTGATCCTCTCGATGTCAATGGTGCGAAACCAACCATGAAGAAGTG\
) def
/coor [
[147.74201965 172.84172058]
[138.46963501 161.05091858]
[129.19725037 149.26013184]
[119.92486572 137.46932983]
[95.81027985 142.23028564]
[73.10125732 132.82389832]
[59.41617203 112.40580750]
[44.52225494 114.18659210]
[31.73824310 123.50752258]
[18.18241501 117.33590698]
[3.28849673 119.11669159]
[-11.60542202 120.89748383]
[-26.49934006 122.67826843]
[-41.39325714 124.45905304]
[-56.28717804 126.23983765]
[-71.18109131 128.02062988]
[-59.27088547 137.13911438]
[-54.81957245 151.46342468]
[-59.46396255 165.72630310]
[-71.49624634 174.68309021]
[-86.49199677 175.04025269]
[-98.93705750 166.66647339]
[-104.25521851 152.64088440]
[-100.49091339 138.12089539]
[-89.02771759 128.44544983]
[-103.98950195 127.37536621]
[-118.95128632 126.30527496]
[-133.91307068 125.23519135]
[-141.45489502 138.50483704]
[-154.01220703 147.18104553]
[-169.09175110 149.54113770]
[-183.69947815 145.11651611]
[-194.93499756 134.78569031]
[-200.56748962 120.59986877]
[-199.47863770 105.37563324]
[-191.88461304 92.13578796]
[-179.29322815 83.50910187]
[-164.20449829 81.20841217]
[-149.61431885 85.69052124]
[-138.41957092 96.06551361]
[-132.84297180 110.27340698]
[-117.88119507 111.34349823]
[-102.91941071 112.41358185]
[-87.95763397 113.48367310]
[-72.96188354 113.12670898]
[-58.06796265 111.34591675]
[-43.17404556 109.56513214]
[-28.28012657 107.78434753]
[-13.38620758 106.00356293]
[1.50771081 104.22277832]
[16.40162849 102.44199371]
[28.12032700 93.24843597]
[42.74146652 99.29267883]
[57.63538742 97.51189423]
[59.72609329 86.62227631]
[64.56638336 76.64598846]
[71.82579803 68.26412964]
[81.00872803 62.04894257]
[91.48822784 58.42475510]
[102.54885101 57.63899612]
[113.43545532 59.74531555]
[120.62419128 46.58013153]
[112.54606628 37.75762558]
[107.30773163 27.02504158]
[105.32876587 15.26711750]
[106.76055145 3.44965434]
[111.47478485 -7.45981598]
[119.07487488 -16.57124519]
[128.92926025 -23.14467812]
[140.22393799 -26.65034866]
[152.02963257 -26.81135178]
[163.37832642 -23.62549210]
[171.78593445 -36.04772949]
[180.19355774 -48.46997070]
[174.78312683 -63.01324463]
[178.98674011 -77.95008850]
[191.18801880 -87.53697968]
[206.69532776 -88.08755493]
[219.54577637 -79.39011383]
[224.79812622 -64.78900146]
[220.43272400 -49.89863968]
[208.12815857 -40.44467926]
[192.61579895 -40.06235504]
[184.20817566 -27.64011574]
[175.80056763 -15.21787739]
[185.73194885 0.11001990]
[188.06590271 18.27489090]
[182.30055237 35.71073532]
[169.52830505 48.97576904]
[152.22920227 55.43179703]
[133.78938293 53.76886368]
[126.60063934 66.93405151]
[132.70751953 72.95986176]
[137.47766113 80.09080505]
[140.71609497 88.03543091]
[142.29046631 96.46903992]
[142.13644409 105.04696655]
[140.26029968 113.41861725]
[136.73873901 121.24185944]
[131.71566772 128.19694519]
[140.98805237 139.98774719]
[150.26043701 151.77853394]
[159.53282166 163.56933594]
[173.65104675 159.08280945]
[190.09898376 165.04576111]
[201.17781067 181.94432068]
[213.79661560 190.05393982]
[228.67425537 185.23835754]
[243.14709473 191.16046143]
[250.38148499 205.02398682]
[246.96157837 220.28303528]
[234.50215149 229.73272705]
[218.88615417 228.91120911]
[207.48699951 218.20639038]
[205.68701172 202.67274475]
[193.06820679 194.56312561]
[187.11805725 199.12884521]
[189.07626343 214.00047302]
[175.21775818 208.26026917]
[169.26760864 212.82597351]
[173.83489990 227.11372375]
[178.40220642 241.40147400]
[192.56269836 248.41973877]
[197.53376770 263.42187500]
[190.36619568 277.50735474]
[175.31234741 282.31954956]
[161.30340576 275.00344849]
[156.65065002 259.89956665]
[164.11445618 245.96876526]
[159.54714966 231.68101501]
[154.97985840 217.39326477]
] def
/pairs [
[1 103]
[2 102]
[3 101]
[4 100]
[7 54]
[8 53]
[10 51]
[11 50]
[12 49]
[13 48]
[14 47]
[15 46]
[16 45]
[25 44]
[26 43]
[27 42]
[28 41]
[61 92]
[62 91]
[72 85]
[73 84]
[74 83]
[106 116]
[107 115]
[120 131]
[121 130]
[122 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF

%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.3
%%CreationDate: Mon Oct 28 17:49:41 2013
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GCTGTTGCTGTAGGAGGGAAAACAAGACGAAGGCCGTCTTGTGGGTGCTTGTGATGGCATCC\
) def
/coor [
[93.17758179 131.45263672]
[86.66932678 144.96716309]
[88.43373871 161.27111816]
[75.03839874 170.73139954]
[60.26327515 163.61607361]
[59.30775452 147.24478149]
[73.15479279 138.45890808]
[79.66304779 124.94437408]
[72.59645081 116.87776947]
[68.57248688 106.93721771]
[68.03793335 96.22642517]
[71.05214691 85.93460846]
[77.28044891 77.20448303]
[69.45892334 64.40512085]
[61.63739395 51.60575867]
[47.11293030 55.72188568]
[32.01655197 55.76556778]
[17.46850777 51.73356628]
[4.54836369 43.92507935]
[-5.78512192 32.91955185]
[-12.76513481 19.53366470]
[-15.87371349 4.76073933]
[-14.88017941 -10.30297470]
[-9.85825920 -24.53964806]
[-1.18061316 -36.89282990]
[10.50881958 -46.44582367]
[24.34260559 -52.48974228]
[39.29418564 -54.57608414]
[54.25405502 -52.55002594]
[68.11209106 -46.56191635]
[79.83993530 -37.05611420]
[88.56729889 -24.73801231]
[93.64656067 -10.52169609]
[94.70080566 4.53789043]
[91.65180206 19.32322502]
[84.72579956 32.73714066]
[74.43675995 43.78422928]
[82.25828552 56.58359146]
[90.07981110 69.38295746]
[107.33091736 68.66198730]
[122.47209167 76.96050262]
[131.14550781 91.89008331]
[130.85484314 109.15380096]
[143.84523010 116.65380096]
[159.66517639 116.85318756]
[166.81866455 129.91752625]
[179.80905151 137.41752625]
[192.79942322 144.91752625]
[205.78981018 152.41752625]
[220.98878479 148.08549500]
[234.75848389 155.84248352]
[238.92958069 171.08642578]
[231.02743530 184.77333069]
[215.74026489 188.78303528]
[202.13764954 180.73661804]
[198.28981018 165.40789795]
[185.29942322 157.90789795]
[172.30905151 150.40789795]
[159.31866455 142.90789795]
[144.42787170 143.24496460]
[136.34523010 129.64418030]
[123.35484314 122.14418030]
] def
/pairs [
[1 8]
[2 7]
[13 39]
[14 38]
[15 37]
[43 62]
[44 61]
[46 59]
[47 58]
[48 57]
[49 56]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF

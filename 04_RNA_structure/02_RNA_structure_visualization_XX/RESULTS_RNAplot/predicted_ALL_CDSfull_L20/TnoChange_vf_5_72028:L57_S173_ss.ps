%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.3
%%CreationDate: Mon Oct 28 17:49:41 2013
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GATCTTCCCGTTGACTACTCCGGATTCATCGCCGTTATCCTCGGCGTCTCCGGCGTT\
) def
/coor [
[76.50042725 269.45593262]
[76.50042725 254.45591736]
[76.50042725 239.45591736]
[68.30300903 232.51602173]
[65.45152283 221.92771912]
[69.20583344 211.38577271]
[78.47335052 204.72042847]
[80.09513855 189.80836487]
[69.25850677 181.61437988]
[63.94470596 168.99182129]
[65.68587494 155.29693604]
[74.12219238 144.23121643]
[87.06941986 138.84094238]
[89.49614716 124.03855133]
[91.92287445 109.23615265]
[85.21812439 122.65428925]
[71.39641571 128.48182678]
[57.10863495 123.91461182]
[49.22996140 111.15034485]
[51.55154419 96.33109283]
[62.95625687 86.58776093]
[77.95639801 86.60881805]
[73.16687012 72.39402008]
[59.49105072 64.00643921]
[57.66506577 48.06764221]
[69.08965302 36.80450439]
[85.00085449 38.85714340]
[93.19294739 52.65095139]
[87.38166809 67.60449982]
[92.17118835 81.81929779]
[106.38598633 86.60881805]
[118.80132294 78.19100952]
[131.21665955 69.77320862]
[143.63198853 61.35540009]
[145.04902649 45.78215408]
[156.18119812 34.79994965]
[171.77223206 33.59424973]
[184.46052551 42.73434448]
[188.25503540 57.90456772]
[181.36413574 71.94200134]
[167.04148865 78.21858978]
[152.04980469 73.77073669]
[139.63446045 82.18853760]
[127.21913147 90.60634613]
[114.80379486 99.02415466]
[106.72527313 111.66287994]
[104.29854584 126.46527863]
[101.87181854 141.26768494]
[113.84169006 152.92187500]
[116.63542175 169.22703552]
[109.37298584 183.90827942]
[95.00720978 191.43014526]
[93.38542175 206.34220886]
[102.58548737 223.94107056]
[91.50042725 239.45591736]
[91.50042725 254.45591736]
[91.50042725 269.45593262]
] def
/pairs [
[1 57]
[2 56]
[3 55]
[7 53]
[8 52]
[13 48]
[14 47]
[15 46]
[22 30]
[23 29]
[31 45]
[32 44]
[33 43]
[34 42]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF

%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.3
%%CreationDate: Mon Oct 28 17:49:41 2013
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
TGCAAACCCACGTCAGTTCAAGATCCCAGACTGGTTCTTGAACAGGCAGAAGGATTACAAAGATGGCAAGTATTCTCAAGTTGTCTCCAATGCT\
) def
/coor [
[92.50000000 189.95639038]
[92.50000000 174.95639038]
[92.50000000 159.95639038]
[84.73599243 158.46391296]
[77.23331451 155.97048950]
[70.12041473 152.51884460]
[63.51906586 148.16804504]
[57.54228973 142.99256897]
[52.29241180 137.08105469]
[47.85931396 130.53468323]
[44.31888962 123.46555328]
[41.73175049 115.99467468]
[40.14219666 108.24996185]
[39.57743835 100.36400604]
[40.04714584 92.47180939]
[41.54327393 84.70851135]
[27.61496353 79.14054871]
[13.68665409 73.57259369]
[-0.24165687 68.00463104]
[-14.16996765 62.43667603]
[-23.50327110 62.12952042]
[-28.46178627 56.44747543]
[-42.19838715 50.42204285]
[-56.77009583 55.92686081]
[-70.61512756 49.62053299]
[-75.77333069 35.69470978]
[-89.50992584 29.66927910]
[-104.91802216 34.13807678]
[-117.93496704 24.76050949]
[-118.57526398 8.73023891]
[-106.34774780 -1.65568089]
[-90.63230896 1.56993866]
[-83.48449707 15.93267822]
[-69.74789429 21.95810890]
[-56.00878143 16.32141685]
[-41.99208069 22.23637772]
[-36.17295456 36.68544388]
[-22.43635559 42.71087646]
[-8.60200882 48.50836182]
[5.32630205 54.07632065]
[19.25461197 59.64427948]
[33.18292236 65.21224213]
[47.11123276 70.78019714]
[56.81992722 57.73299408]
[69.65668488 47.74771118]
[84.69158173 41.54770279]
[100.83546448 39.58211899]
[116.91881561 41.99334335]
[131.77653503 48.60670853]
[144.33227539 58.94311905]
[153.67649841 72.25379181]
[159.13226318 87.57445526]
[174.08102417 86.33576965]
[189.02980042 85.09707642]
[200.51423645 70.22913361]
[218.88653564 68.30273438]
[232.72657776 80.05884552]
[247.56080627 77.83489227]
[257.59985352 63.62581635]
[274.46319580 61.02585220]
[287.78198242 71.14614868]
[302.53454590 68.43293762]
[317.28713989 65.71973419]
[322.35830688 51.22219086]
[334.00930786 41.21471024]
[349.10607910 38.38924789]
[363.58764648 43.50584793]
[373.55856323 55.18815994]
[376.33670044 70.29370880]
[371.17471313 84.75917816]
[359.46121216 94.69342041]
[344.34701538 97.42417908]
[329.89782715 92.21690369]
[320.00033569 80.47230530]
[305.24777222 83.18551636]
[290.49517822 85.89872742]
[284.66247559 97.51694489]
[273.00021362 103.69145966]
[259.72436523 101.93334198]
[249.78475952 92.66911316]
[234.95054626 94.89306641]
[230.19483948 105.51714325]
[220.74925232 112.52453613]
[208.96221924 114.02536011]
[197.83743286 109.51762390]
[190.26847839 100.04584503]
[175.31971741 101.28453064]
[160.37095642 102.52322388]
[155.81915283 123.13525391]
[144.45512390 140.92382812]
[127.66574860 153.71801758]
[107.50000000 159.95639038]
[107.50000000 174.95639038]
[107.50000000 189.95639038]
] def
/pairs [
[1 94]
[2 93]
[3 92]
[16 43]
[17 42]
[18 41]
[19 40]
[20 39]
[22 38]
[23 37]
[26 34]
[27 33]
[52 88]
[53 87]
[54 86]
[57 81]
[58 80]
[61 76]
[62 75]
[63 74]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF

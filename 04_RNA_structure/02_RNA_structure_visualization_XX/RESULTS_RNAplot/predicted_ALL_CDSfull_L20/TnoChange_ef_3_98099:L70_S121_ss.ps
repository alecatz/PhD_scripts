%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.3
%%CreationDate: Mon Oct 28 17:49:41 2013
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
TTGGTAGTCGCTGAATGCGTGGTGACCGCATTCGTGGGCTATGACCCAGATACCAGTTAGGACACAGCCT\
) def
/coor [
[90.17047119 106.45433044]
[75.63871002 119.86183929]
[56.18783569 118.79286194]
[43.59593964 104.31391144]
[28.59961128 104.64574432]
[16.36202812 118.76676178]
[-1.98556364 119.77593994]
[-15.24212456 107.50401306]
[-30.15044212 109.15992737]
[-34.34805679 123.76980591]
[-43.82101440 135.65809631]
[-57.12475967 143.01193237]
[-72.23056793 144.70988464]
[-86.83490753 140.49305725]
[-98.71072388 131.00447083]
[-106.04705048 117.69107056]
[-107.72514343 102.58303833]
[-103.48910522 87.98426056]
[-93.98490143 76.12093353]
[-80.66185760 68.80212402]
[-65.55163574 67.14390564]
[-50.95844269 71.39914703]
[-39.10762405 80.91894531]
[-31.80635262 94.25160980]
[-16.89803505 92.59569550]
[-11.65936470 82.04354095]
[-1.79210615 75.38645935]
[10.19707012 74.46083069]
[21.18995094 79.62814331]
[28.26778030 89.64941406]
[43.26411057 89.31758118]
[48.39927673 79.80068207]
[57.19301605 73.36613464]
[67.97978973 71.32054138]
[78.67842865 74.13076782]
[87.19364166 81.31979370]
[91.82637787 91.54601288]
[82.13722992 80.09523010]
[76.57090759 66.16625977]
[75.69986725 51.19157410]
[79.61367798 36.71117020]
[87.90984344 24.21422577]
[99.73517609 14.98593235]
[113.87355804 9.97533321]
[128.87098694 9.69772339]
[143.18511963 14.18165207]
[155.34388733 22.96598816]
[164.09686279 35.14734650]
[168.54388428 49.47298813]
[168.22761536 64.46965027]
[163.18060303 78.59507751]
[153.92185974 90.39659119]
[141.40357971 98.66052246]
[126.91313934 102.53700256]
[111.94138336 101.62751007]
[122.19021606 112.58020020]
[133.36694336 122.58422852]
[145.38409424 131.56130981]
[161.72404480 132.95346069]
[168.44247437 147.91322327]
[158.62805176 161.05130005]
[142.37699890 158.85234070]
[136.40701294 143.57847595]
[124.38986206 134.60137939]
[121.31478882 135.11370850]
[117.82848358 134.23275757]
[114.54904938 131.78569031]
[112.14698029 127.86318970]
[111.23753357 122.82903290]
[100.98869324 111.87635040]
] def
/pairs [
[1 37]
[4 31]
[5 30]
[8 25]
[9 24]
[55 70]
[56 69]
[57 64]
[58 63]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF

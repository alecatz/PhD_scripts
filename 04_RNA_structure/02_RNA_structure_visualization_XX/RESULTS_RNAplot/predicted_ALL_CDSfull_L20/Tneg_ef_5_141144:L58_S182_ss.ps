%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.3
%%CreationDate: Mon Oct 28 17:49:41 2013
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
ATGTCCAGTCTTTATCATCTCCCCTTGATTCTGCAGTAAAAGCTTCACCCTTTCGATT\
) def
/coor [
[106.61393738 148.34706116]
[99.37818146 146.37377930]
[77.67089844 140.45397949]
[74.83916473 157.16976929]
[57.99273300 159.07608032]
[51.49735641 143.41574097]
[64.74758911 132.83898926]
[64.22083282 104.38023376]
[79.08611298 88.40211487]
[62.43427658 92.72383118]
[45.90280533 88.28349304]
[33.77996063 76.32094574]
[29.16686630 60.01573181]
[33.18452072 43.64232254]
[21.89595795 33.76465225]
[10.60739613 23.88698006]
[-0.68116558 14.00930977]
[-15.78138161 17.58185768]
[-30.08458328 11.56537819]
[-38.09090042 -1.72666979]
[-36.72173691 -17.18322182]
[-26.50356483 -28.86091995]
[-11.36548233 -32.26944733]
[2.87161088 -26.09815979]
[10.73326206 -12.72004128]
[9.19650555 2.72074866]
[20.48506737 12.59841919]
[31.77362823 22.47608948]
[43.06219101 32.35375977]
[54.94683456 26.87968254]
[68.07244873 26.45430565]
[80.37577057 31.18164825]
[89.90835571 40.35283279]
[95.14514160 52.55213547]
[95.22834015 65.87544250]
[90.10772705 78.22743988]
[123.67613983 72.81957245]
[146.18194580 113.72441864]
[161.04924011 115.71530151]
[169.39517212 102.93608856]
[182.46371460 95.05093384]
[197.66012573 93.62543488]
[211.96711731 98.94262695]
[222.54405212 109.94677734]
[227.29084778 124.45300293]
[225.26504517 139.58108521]
[216.86886597 152.32733154]
[203.76936340 160.16096497]
[188.56745911 161.52661133]
[174.28150940 156.15312195]
[163.74800110 145.10740662]
[159.05834961 130.58259583]
[144.19105530 128.59170532]
[138.54678345 133.53054810]
[148.42427063 144.81925964]
[137.13540649 154.69657898]
[127.25821686 143.40821838]
[121.61393738 148.34706116]
] def
/pairs [
[1 58]
[3 7]
[9 36]
[14 29]
[15 28]
[16 27]
[17 26]
[38 53]
[39 52]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF

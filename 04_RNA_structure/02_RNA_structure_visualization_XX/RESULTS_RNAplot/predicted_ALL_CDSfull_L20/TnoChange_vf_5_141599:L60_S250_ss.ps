%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.3
%%CreationDate: Mon Oct 28 17:49:41 2013
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
CAGGATCCATCTCTTGCACTATATCACTCGGTGGTTGTCCACACTCTTGCATCTTCTGCA\
) def
/coor [
[67.33950043 137.01370239]
[55.82129288 146.62258911]
[44.30308533 156.23149109]
[32.78487778 165.84039307]
[33.95732498 181.31311035]
[25.78258514 194.50224304]
[11.40401077 200.33630371]
[-3.64954114 196.57197571]
[-13.58967400 184.65670776]
[-14.59420300 169.17218018]
[-6.27686644 156.07250977]
[8.16415024 150.39477539]
[23.17597961 154.32218933]
[34.69418716 144.71328735]
[46.21239471 135.10438538]
[57.73060226 125.49549103]
[53.96959305 117.83041382]
[51.58565903 109.63191223]
[50.65011978 101.14525604]
[51.19096375 92.62434387]
[53.19201279 84.32408142]
[56.59339905 76.49278259]
[61.29336548 69.36475372]
[67.15129852 63.15322113]
[73.99196625 58.04402161]
[81.61069489 54.19000244]
[89.77957916 51.70647049]
[98.25421906 50.66771317]
[106.78108978 51.10481644]
[115.10508728 53.00469589]
[121.81150055 39.58739090]
[115.42481232 25.31349182]
[119.75710297 10.28800488]
[132.76280212 1.60550809]
[148.30101013 3.36560965]
[159.03507996 14.73724365]
[159.89668274 30.35107231]
[150.47900391 42.83472443]
[135.22880554 46.29379654]
[128.52239990 59.71110535]
[136.17710876 66.41519165]
[142.29460144 74.54634094]
[146.61494446 83.75904846]
[148.95457458 93.66184998]
[149.21405029 103.83396912]
[147.38237000 113.84317780]
[143.53733826 123.26417542]
[137.84236145 131.69665527]
[147.74464417 142.96362305]
[157.64692688 154.23060608]
[167.54920959 165.49758911]
[183.40209961 167.96041870]
[191.23526001 181.96116638]
[185.03977966 196.75965881]
[169.56828308 201.00376892]
[156.68919373 191.43775940]
[156.28222656 175.39987183]
[146.37994385 164.13288879]
[136.47767639 152.86590576]
[126.57538605 141.59892273]
] def
/pairs [
[1 16]
[2 15]
[3 14]
[4 13]
[30 40]
[31 39]
[48 60]
[49 59]
[50 58]
[51 57]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF

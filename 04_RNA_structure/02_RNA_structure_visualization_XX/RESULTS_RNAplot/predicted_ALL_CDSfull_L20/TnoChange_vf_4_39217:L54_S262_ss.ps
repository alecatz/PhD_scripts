%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.3
%%CreationDate: Mon Oct 28 17:49:41 2013
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GGTCGGGTCAATGGTCAATACATCATTGAAGGTCTTTCTTCCGGATTCATGTTC\
) def
/coor [
[72.26201630 128.05245972]
[65.23763275 142.22879028]
[50.36436081 143.02569580]
[37.98228073 151.49234009]
[25.60020256 159.95898438]
[22.92981720 175.53604126]
[9.97886372 184.59410095]
[-5.56908607 181.75917053]
[-14.48970985 168.71318054]
[-11.49055958 153.19607544]
[1.64902163 144.41387939]
[17.13355446 147.57690430]
[29.51563263 139.11026001]
[41.89770889 130.64361572]
[48.03644943 117.07286835]
[63.79537201 115.67037964]
[69.93411255 102.09963226]
[85.69303131 100.69714355]
[91.91494751 88.17598724]
[105.84032440 86.92077637]
[118.22239685 78.45413208]
[130.60447693 69.98748016]
[142.98655701 61.52083206]
[145.42350769 43.11556625]
[160.01139832 32.13415909]
[177.76597595 34.79242706]
[189.10221863 24.96951485]
[200.15333557 14.82689190]
[210.91030884 4.37282896]
[221.66728210 -6.08123493]
[232.42427063 -16.53529739]
[243.18124390 -26.98936272]
[247.12838745 -42.90639877]
[262.95928955 -47.18597412]
[274.38845825 -35.42562103]
[269.65856934 -19.72338867]
[253.63529968 -16.23238564]
[242.87832642 -5.77832127]
[232.12135315 4.67574215]
[221.36437988 15.12980556]
[210.60739136 25.58386993]
[207.88633728 32.83435822]
[198.92512512 36.30575943]
[187.58888245 46.12866974]
[189.26194763 57.95341110]
[184.77023315 69.15150452]
[175.19653320 76.69448853]
[163.01521301 78.47694397]
[151.45320129 73.90290833]
[139.07112122 82.36956024]
[126.68904877 90.83621216]
[114.30696869 99.30285645]
[108.08505249 111.82401276]
[94.15967560 113.07922363]
] def
/pairs [
[1 16]
[3 14]
[4 13]
[5 12]
[18 54]
[20 52]
[21 51]
[22 50]
[23 49]
[26 44]
[27 43]
[28 41]
[29 40]
[30 39]
[31 38]
[32 37]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF

#input data
EXP <- read.csv("rma_fake.txt",header=TRUE,row.names=1,sep="\t")
#NOTE: this produces data.frame object; if working with data.matrix object,
#names(), row.names() don't work; use colnames(), rownames() instead 
#(working for data.frame as well)

#reads list of genes/experiments from a file (one per line)
keepG <- scan("keep_genes.txt", what="character") 
keepC <- scan("keep_CELs.txt", what="character")

> EXP
   CEL1 CEL2 CEL3 CEL4 CEL5
l1    4    8    5    9    7
l2    4    9    6    8    8
l3    1   80  100    2   18
l4   10   80  100   20   20
l5    7   56    1   99    1
l6   99   12   12   12    1
l7    3    3    5    9    7
l8    4    1    6    2    8
l9    1    2   10    2   10
l0   10  800    1  200  200
> keepG
[1] "l1" "l2" "l4" "l5" "l6"
> keepC
[1] "CEL1" "CEL2" "CEL4"


#keep selected genes/experiments

EXP[row.names(EXP) %in% keepG, keepC]

   CEL1 CEL2 CEL4
l1    4    8    9
l2    4    9    8
l4   10   80   20
l5    7   56   99
l6   99   12   12

#drop selected genes/experiments

EXP[!(row.names(EXP) %in% keepG), !(names(EXP) %in% keepC)]

   CEL3 CEL5
l3  100   18
l7    5    7
l8    6    8
l9   10   10
l0    1  200

#filter for rows containing value >= X (ex. expression, Pearson correlation..)
#apply(): 1==filter applied to rows, 2==columns
#returns TRUE/FALSE vector, by using filter with data.frame/matrix it returns only TRUE rows/columns (use ! to return FALSE rows/columns)

X=100
filter <- apply(EXP,1,function(i) any(i>=X))
EXP[filter,]

   CEL1 CEL2 CEL3 CEL4 CEL5
l3    1   80  100    2   18
l4   10   80  100   20   20
l0   10  800    1  200  200

> EXP[!filter,]
   CEL1 CEL2 CEL3 CEL4 CEL5
l1    4    8    5    9    7
l2    4    9    6    8    8
l5    7   56    1   99    1
l6   99   12   12   12    1
l7    3    3    5    9    7
l8    4    1    6    2    8
l9    1    2   10    2   10




